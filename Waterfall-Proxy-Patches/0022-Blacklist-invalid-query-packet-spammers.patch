From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Wed, 29 May 2019 13:26:07 +0300
Subject: [PATCH] Blacklist invalid query packet spammers


diff --git a/query/src/main/java/net/md_5/bungee/query/QueryHandler.java b/query/src/main/java/net/md_5/bungee/query/QueryHandler.java
index c3e296a8c941f409d50a18e3fb12874fbcd1fe58..edcaa76a2d3e2cb82b3effdc16c030aaf6b395c4 100644
--- a/query/src/main/java/net/md_5/bungee/query/QueryHandler.java
+++ b/query/src/main/java/net/md_5/bungee/query/QueryHandler.java
@@ -33,6 +33,7 @@ public class QueryHandler extends SimpleChannelInboundHandler<DatagramPacket>
     private final Random random = new Random();
     private final Cache<InetAddress, QuerySession> sessions = CacheBuilder.newBuilder().expireAfterWrite( 30, TimeUnit.SECONDS ).build();
     private static io.github.waterfallmc.waterfall.utils.FastException cachedNoSessionException = new io.github.waterfallmc.waterfall.utils.FastException("No Session!");
+    private final Cache<InetAddress, Integer> blacklistedAddresses = CacheBuilder.newBuilder().maximumSize(1024).expireAfterWrite( 120, TimeUnit.SECONDS ).build(); // Firefly - Blacklist invalid query packet spammers
 
     private void writeShort(ByteBuf buf, int s)
     {
@@ -67,11 +68,29 @@ public class QueryHandler extends SimpleChannelInboundHandler<DatagramPacket>
 
     private void handleMessage(ChannelHandlerContext ctx, DatagramPacket msg)
     {
+        // Firefly start - Blacklist invalid query packet spammers
+        Integer invalidQueries = blacklistedAddresses.getIfPresent(msg.sender().getAddress());
+        if (invalidQueries != null && invalidQueries > 5) {
+            if (bungee.getConfig().isLogInvalidQueryPackets())
+                bungee.getLogger().log( Level.WARNING, "Query - Ignoring packet from: {0}", msg.sender() );
+            return;
+        }
+        // Firefly end
         ByteBuf in = msg.content();
         if ( in.readUnsignedByte() != 0xFE || in.readUnsignedByte() != 0xFD )
         {
             if (bungee.getConfig().isLogInvalidQueryPackets()) // Firefly - Add option to exclude logging invalid query packets
             bungee.getLogger().log( Level.WARNING, "Query - Incorrect magic!: {0}", msg.sender() );
+            // Firefly start - Blacklist invalid query packet spammers
+            try {
+                if (invalidQueries == null) {
+                    invalidQueries = 0;
+                }
+                blacklistedAddresses.put(msg.sender().getAddress(), ++invalidQueries);
+            } catch (Exception e) {
+                throw new RuntimeException(e);
+            }
+            // Firefly end
             return;
         }
 
