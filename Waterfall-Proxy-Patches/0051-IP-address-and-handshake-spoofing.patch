From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Sun, 16 Feb 2020 16:48:42 +0200
Subject: [PATCH] IP address and handshake spoofing


diff --git a/api/src/main/java/net/md_5/bungee/api/connection/PendingConnection.java b/api/src/main/java/net/md_5/bungee/api/connection/PendingConnection.java
index f497395eb2587b46fab991f3cf5f6285320126cc..18db187d23dbf99715d56835c336b9273b1d545c 100644
--- a/api/src/main/java/net/md_5/bungee/api/connection/PendingConnection.java
+++ b/api/src/main/java/net/md_5/bungee/api/connection/PendingConnection.java
@@ -89,4 +89,8 @@ public interface PendingConnection extends Connection
      * @return Whether the client is using a legacy client.
      */
     boolean isLegacy();
+    // Firefly start - IP address and handshake spoofing
+    net.md_5.bungee.protocol.packet. @org.checkerframework.checker.nullness.qual.NonNull Handshake getHandshake();
+    void setHandshake(net.md_5.bungee.protocol.packet. @org.checkerframework.checker.nullness.qual.NonNull Handshake handshake);
+    // Firefly end
 }
diff --git a/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java b/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
index f7459860f9da503cdafceacb31ecd4dd0e9346d2..0de3e34543eb25fe0439a1780606c60cd41ba967 100644
--- a/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
+++ b/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
@@ -372,4 +372,8 @@ public interface ProxiedPlayer extends Connection, CommandSender
      * @return this player's {@link Scoreboard}
      */
     Scoreboard getScoreboard();
+    // Firefly start - IP address and handshake spoofing
+    java.net. @org.checkerframework.checker.nullness.qual.NonNull InetSocketAddress getSpoofedAddress();
+    void setSpoofedAddress(java.net. @org.checkerframework.checker.nullness.qual.NonNull InetSocketAddress spoofedAddress);
+    // Firefly end
 }
diff --git a/proxy/src/main/java/eu/mikroskeem/firefly/misc/VelocitySupport.java b/proxy/src/main/java/eu/mikroskeem/firefly/misc/VelocitySupport.java
index 72f989ca748f08d3e891a5ffd65bb078aaff2a7e..19dd4e8db3c21c8fa11e0bf9a3715ab6d196e215 100644
--- a/proxy/src/main/java/eu/mikroskeem/firefly/misc/VelocitySupport.java
+++ b/proxy/src/main/java/eu/mikroskeem/firefly/misc/VelocitySupport.java
@@ -33,7 +33,7 @@ public final class VelocitySupport {
         ByteBuf forwarded = Unpooled.buffer(2048);
         try {
             DefinedPacket.writeVarInt(MODERN_FORWARDING_VERSION, forwarded);
-            DefinedPacket.writeString(user.getAddress().getHostString(), forwarded);
+            DefinedPacket.writeString(user.getSpoofedAddress().getHostString(), forwarded); // Firefly - IP address and handshake spoofing
             LoginResult profile = user.getPendingConnection().getLoginProfile();
             DefinedPacket.writeUUID(user.getPendingConnection().getUniqueId(), forwarded);
             DefinedPacket.writeString(user.getPendingConnection().getName(), forwarded);
diff --git a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
index 4096b28d97f7e5449da630ad55fb038f9b87b2c6..ce1d023f40c2fb784bcfa62e376a282c6741181c 100644
--- a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
+++ b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
@@ -102,9 +102,9 @@ public class ServerConnector extends PacketHandler implements eu.mikroskeem.fire
         Handshake originalHandshake = user.getPendingConnection().getHandshake();
         Handshake copiedHandshake = new Handshake( originalHandshake.getProtocolVersion(), originalHandshake.getHost(), originalHandshake.getPort(), 2 );
 
-        if ( target.getIpForwardType().isBungeeCord() && user.getSocketAddress() instanceof InetSocketAddress ) // Firefly - server specific IP forwarding
+        if ( target.getIpForwardType().isBungeeCord() && user.getSpoofedAddress() instanceof InetSocketAddress ) // Firefly - server specific IP forwarding // Firefly - IP address and handshake spoofing
         {
-            String newHost = copiedHandshake.getHost() + "\00" + user.getAddress().getHostString() + "\00" + user.getUUID();
+            String newHost = copiedHandshake.getHost() + "\00" + user.getSpoofedAddress().getHostString() + "\00" + user.getUUID(); // Firefly - IP address and handshake spoofing
 
             LoginResult profile = user.getPendingConnection().getLoginProfile();
 
diff --git a/proxy/src/main/java/net/md_5/bungee/UserConnection.java b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
index e42e8f9037f3209a5b94f2af5ccd5e41b19e89bf..9686475ae2fb551be8caed46e45c62f890b8eb51 100644
--- a/proxy/src/main/java/net/md_5/bungee/UserConnection.java
+++ b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
@@ -153,6 +153,15 @@ public final class UserConnection implements ProxiedPlayer, eu.mikroskeem.firefl
         }
     };
     @Getter private final java.util.concurrent.CompletableFuture<Void> disconnectFuture = new java.util.concurrent.CompletableFuture<>(); // Firefly - wait for all players to disconnect instead of using hardcoded delay
+    // Firefly start - IP spoofing
+    @Setter private InetSocketAddress spoofedAddress = null;
+    public InetSocketAddress getSpoofedAddress() {
+        if (spoofedAddress != null) {
+            return spoofedAddress;
+        }
+        return getAddress();
+    }
+    // Firefly end
 
     public void init()
     {
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
index 40c31d998390655a68db652c47c9e4e61bd4e488..06a7e14286d296c2fd32c507b31985c58f43a80a 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
@@ -389,10 +389,10 @@ public class DownstreamBridge extends PacketHandler
             if ( subChannel.equals( "IP" ) )
             {
                 out.writeUTF( "IP" );
-                if ( con.getSocketAddress() instanceof InetSocketAddress )
+                if ( con.getSpoofedAddress() instanceof InetSocketAddress ) // Firefly - IP address and handshake spoofing
                 {
-                    out.writeUTF( con.getAddress().getHostString() );
-                    out.writeInt( con.getAddress().getPort() );
+                    out.writeUTF( con.getSpoofedAddress().getHostString() ); // Firefly - IP address and handshake spoofing
+                    out.writeInt( con.getSpoofedAddress().getPort() ); // Firefly - IP address and handshake spoofing
                 } else
                 {
                     out.writeUTF( "unix://" + ( (DomainSocketAddress) con.getSocketAddress() ).path() );
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
index e914b87beb3db0e6f1d3ff70e061fb1b1fa2b62b..136fcfc5fbdd16ca7b04c79a74260adfa0ad4beb 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
@@ -75,6 +75,7 @@ public class InitialHandler extends PacketHandler implements PendingConnection
     @Getter
     private final ListenerInfo listener;
     @Getter
+    @lombok.Setter // Firefly - IP address and handshake spoofing
     private Handshake handshake;
     @Getter
     private LoginRequest loginRequest;
