From a7bde167c19dc45498063a26b7280e70eb105333 Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Sun, 14 Apr 2019 23:25:25 +0300
Subject: [PATCH] Server specific IP forwarding support


diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyServer.java b/api/src/main/java/net/md_5/bungee/api/ProxyServer.java
index d3f66c3d..56337855 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyServer.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyServer.java
@@ -243,13 +243,34 @@ public abstract class ProxyServer
      * @return the constructed instance
      */
     // Waterdog start
-    public abstract ServerInfo constructServerInfo(String name, InetSocketAddress address, String motd, boolean restricted, boolean isRakNet, String transferGroup);
+    // MikroCord start - server specific IP forwarding
+    public ServerInfo constructServerInfo(String name, InetSocketAddress address, String motd, boolean restricted, boolean isRakNet, String transferGroup) {
+        return constructServerInfo(name, address, motd, restricted, isRakNet, getConfig().isIpForward(), transferGroup);
+    }
+    // MikroCord end
 
     public ServerInfo constructServerInfo(String name, InetSocketAddress address, String motd, boolean restricted) {
         return constructServerInfo(name, address, motd, restricted, false, "default");
     }
     // Waterdog end
 
+    // MikroCord start - server specific IP forwarding
+    /**
+     * Factory method to construct an implementation specific server info
+     * instance.
+     *
+     * @param name name of the server
+     * @param address connectable Minecraft address + port of the server
+     * @param motd the motd when used as a forced server
+     * @param restricted whether the server info restricted property will be set
+     * @param isIpForward whether IP forwarding should be done for this server or not
+     * @param isRakNet whether given server uses RakNet protocol or not
+     * @param transferGroup MCPE transfer group name
+     * @return the constructed instance
+     */
+    public abstract ServerInfo constructServerInfo(String name, InetSocketAddress address, String motd, boolean restricted, boolean isIpForward, boolean isRakNet, String transferGroup);
+    // MikroCord end
+
     /**
      * Returns the console overlord for this proxy. Being the console, this
      * command server cannot have permissions or groups, and will be able to
diff --git a/api/src/main/java/net/md_5/bungee/api/config/ServerInfo.java b/api/src/main/java/net/md_5/bungee/api/config/ServerInfo.java
index 30e41bd7..50b9f23c 100644
--- a/api/src/main/java/net/md_5/bungee/api/config/ServerInfo.java
+++ b/api/src/main/java/net/md_5/bungee/api/config/ServerInfo.java
@@ -111,4 +111,12 @@ public interface ServerInfo
      */
     boolean isRakNet();
     // Waterdog end
+    // MikroCord start - server specific IP forwarding
+    /**
+     * Returns whether this server requires IP forwarding or not
+     *
+     * @return Whether this server requires IP forwarding or not
+     */
+    default boolean isIpForward() { return net.md_5.bungee.api.ProxyServer.getInstance().getConfig().isIpForward(); }
+    // MikroCord end
 }
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index ddc5cfdf..5047d617 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -750,11 +750,20 @@ public class BungeeCord extends ProxyServer
         return getConfig().getGameVersion(); // Waterfall
     }
 
+    // MikroCord start - server specific IP forwarding
+    /*
     @Override
     public ServerInfo constructServerInfo(String name, InetSocketAddress address, String motd, boolean restricted, boolean isRakNet, String transferGroup) // Waterdog
     {
         return new BungeeServerInfo( name, address, motd, restricted, isRakNet, transferGroup ); // Waterdog
     }
+    */
+
+    @Override
+    public ServerInfo constructServerInfo(String name, InetSocketAddress address, String motd, boolean restricted, boolean isIpForward, boolean isRakNet, String transferGroup) {
+        return new BungeeServerInfo( name, address, motd, restricted, isIpForward, isRakNet, transferGroup );
+    }
+    // MikroCord end
 
     @Override
     public CommandSender getConsole()
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeServerInfo.java b/proxy/src/main/java/net/md_5/bungee/BungeeServerInfo.java
index d8163ecf..62c89989 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeServerInfo.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeServerInfo.java
@@ -34,6 +34,7 @@ import net.md_5.bungee.protocol.packet.PluginMessage;
 @ToString(of =
 {
     "name", "address", "restricted"
+        , "ipForward" // MikroCord - server specific IP forwarding
 })
 public class BungeeServerInfo implements ServerInfo
 {
@@ -49,6 +50,10 @@ public class BungeeServerInfo implements ServerInfo
     private final boolean restricted;
     @Getter
     private final Queue<DefinedPacket> packetQueue = new LinkedList<>();
+    // MikroCord start - server specific IP forwarding
+    @Getter
+    private final boolean ipForward;
+    // MikroCord end
 
     // Waterdog start
     public BungeeServerInfo(String name, InetSocketAddress address, String motd, boolean restricted) {
@@ -58,6 +63,7 @@ public class BungeeServerInfo implements ServerInfo
         this.restricted = restricted;
         this.rakNet = true;
         this.transferGroup = "default";
+        this.ipForward = ProxyServer.getInstance().getConfig().isIpForward(); // MikroCord - server specific IP forwarding
     }
 
     @Getter
diff --git a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
index ec2c21b1..a105f97a 100644
--- a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
+++ b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
@@ -106,7 +106,7 @@ public class ServerConnector extends PacketHandler implements eu.mikroskeem.mikr
                     oPEHandshake.getUsername(), oPEHandshake.getUuid(), oPEHandshake.isAuthorized(), oPEHandshake.getClientInfo() );
         }
         // Waterdog end
-        if ( BungeeCord.getInstance().config.isIpForward() && !target.isRakNet()) // Waterdog
+        if ( target.isIpForward() && !target.isRakNet()) // Waterdog // MikroCord - server specific IP forwarding
         {
             String newHost = copiedHandshake.getHost() + "\00" + user.getAddress().getHostString() + "\00" + user.getUUID();
 
diff --git a/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java b/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java
index 7b16fa08..835a48cd 100644
--- a/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java
+++ b/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java
@@ -230,12 +230,13 @@ public class YamlConfig implements ConfigurationAdapter
             String addr = get( "address", "localhost:25565", val );
             String motd = ChatColor.translateAlternateColorCodes( '&', get( "motd", "&1Just another Waterfall - Forced Host", val ) );
             boolean restricted = get( "restricted", false, val );
+            boolean ipForward = get("ip_forward", ProxyServer.getInstance().getConfig().isIpForward(), val); // MikroCord - server specific IP forwarding
             // Waterdog start
             boolean isRakNet = get( "raknet", false, val );
             String transferGroup = get( "transfer_group", "default", val );
             // Waterdog end
             InetSocketAddress address = Util.getAddr( addr );
-            ServerInfo info = ProxyServer.getInstance().constructServerInfo( name, address, motd, restricted, isRakNet, transferGroup ); // Waterdog
+            ServerInfo info = ProxyServer.getInstance().constructServerInfo( name, address, motd, restricted, ipForward, isRakNet, transferGroup ); // Waterdog // MikroCord - server specific IP forwarding
             ret.put( name, info );
         }
 
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
index 1f8a2439..c83d39a8 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
@@ -136,7 +136,7 @@ public class DownstreamBridge extends PacketHandler
     @Override
     public void handle(PacketWrapper packet) throws Exception
     {
-        con.getEntityRewrite().rewriteClientbound( packet.buf, con.getServerEntityId(), con.getClientEntityId(), con.getPendingConnection().getVersion() );
+        con.getEntityRewrite().rewriteClientbound( packet.buf, con.getServerEntityId(), con.getClientEntityId(), con.getPendingConnection().getVersion(), con.getServer() ); // MikroCord - server specific IP forwarding
         con.sendPacket( packet );
     }
 
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java b/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
index 24cb79d3..9225c2ec 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
@@ -121,7 +121,7 @@ public class UpstreamBridge extends PacketHandler
     {
         if ( con.getServer() != null )
         {
-            con.getEntityRewrite().rewriteServerbound( packet.buf, con.getClientEntityId(), con.getServerEntityId(), con.getPendingConnection().getVersion() );
+            con.getEntityRewrite().rewriteServerbound( packet.buf, con.getClientEntityId(), con.getServerEntityId(), con.getPendingConnection().getVersion(), con.getServer() ); // MikroCord - server specific IP forwarding
             con.getServer().getCh().write( packet );
         }
     }
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap.java
index 881d1281..d240edf2 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap.java
@@ -82,24 +82,28 @@ public abstract class EntityMap
         }
     }
 
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
         rewrite( packet, oldId, newId, serverboundInts, serverboundVarInts );
     }
 
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, int protocolVersion)
+    // MikroCord start - server specific IP forwarding
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, int protocolVersion, net.md_5.bungee.api.connection.Server server)
     {
-        rewriteServerbound( packet, oldId, newId );
+        rewriteServerbound( packet, oldId, newId, server );
+        // MikroCord end
     }
 
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
         rewrite( packet, oldId, newId, clientboundInts, clientboundVarInts );
     }
 
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, int protocolVersion)
+    // MikroCord start - server specific IP forwarding
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, int protocolVersion, net.md_5.bungee.api.connection.Server server)
     {
-        rewriteClientbound( packet, oldId, newId );
+        rewriteClientbound( packet, oldId, newId, server );
+        // MikroCord end
     }
 
     protected static void rewriteInt(ByteBuf packet, int oldId, int newId, int offset)
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_10.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_10.java
index 39efaf99..56c5b530 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_10.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_10.java
@@ -48,9 +48,9 @@ class EntityMap_1_10 extends EntityMap
 
     @Override
     @SuppressFBWarnings("DLS_DEAD_LOCAL_STORE")
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteClientbound( packet, oldId, newId );
+        super.rewriteClientbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
 
         // Special cases
         int readerIndex = packet.readerIndex();
@@ -155,15 +155,15 @@ class EntityMap_1_10 extends EntityMap
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteServerbound( packet, oldId, newId );
+        super.rewriteServerbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
         // Special cases
         int readerIndex = packet.readerIndex();
         int packetId = DefinedPacket.readVarInt( packet );
         int packetIdLength = packet.readerIndex() - readerIndex;
 
-        if ( packetId == 0x1B /* Spectate : PacketPlayInSpectate */ && !BungeeCord.getInstance().getConfig().isIpForward() )
+        if ( packetId == 0x1B /* Spectate : PacketPlayInSpectate */ && !server.getInfo().isIpForward() ) // MikroCord - server specific IP forwarding
         {
             UUID uuid = DefinedPacket.readUUID( packet );
             ProxiedPlayer player;
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_11.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_11.java
index 6047fcb5..9eedfe1c 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_11.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_11.java
@@ -48,9 +48,9 @@ class EntityMap_1_11 extends EntityMap
 
     @Override
     @SuppressFBWarnings("DLS_DEAD_LOCAL_STORE")
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteClientbound( packet, oldId, newId );
+        super.rewriteClientbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
 
         // Special cases
         int readerIndex = packet.readerIndex();
@@ -156,15 +156,15 @@ class EntityMap_1_11 extends EntityMap
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteServerbound( packet, oldId, newId );
+        super.rewriteServerbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
         // Special cases
         int readerIndex = packet.readerIndex();
         int packetId = DefinedPacket.readVarInt( packet );
         int packetIdLength = packet.readerIndex() - readerIndex;
 
-        if ( packetId == 0x1B /* Spectate : PacketPlayInSpectate */ && !BungeeCord.getInstance().getConfig().isIpForward() )
+        if ( packetId == 0x1B /* Spectate : PacketPlayInSpectate */ && !server.getInfo().isIpForward() ) // MikroCord - server specific IP forwarding
         {
             UUID uuid = DefinedPacket.readUUID( packet );
             ProxiedPlayer player;
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_12.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_12.java
index 54221465..763f6e11 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_12.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_12.java
@@ -48,9 +48,9 @@ class EntityMap_1_12 extends EntityMap
 
     @Override
     @SuppressFBWarnings("DLS_DEAD_LOCAL_STORE")
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteClientbound( packet, oldId, newId );
+        super.rewriteClientbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
 
         // Special cases
         int readerIndex = packet.readerIndex();
@@ -156,15 +156,15 @@ class EntityMap_1_12 extends EntityMap
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteServerbound( packet, oldId, newId );
+        super.rewriteServerbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
         // Special cases
         int readerIndex = packet.readerIndex();
         int packetId = DefinedPacket.readVarInt( packet );
         int packetIdLength = packet.readerIndex() - readerIndex;
 
-        if ( packetId == 0x1E /* Spectate : PacketPlayInSpectate */ && !BungeeCord.getInstance().getConfig().isIpForward() )
+        if ( packetId == 0x1E /* Spectate : PacketPlayInSpectate */ && !server.getInfo().isIpForward() ) // MikroCord - server specific IP forwarding
         {
             UUID uuid = DefinedPacket.readUUID( packet );
             ProxiedPlayer player;
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_12_1.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_12_1.java
index 75d651c5..18db5a96 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_12_1.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_12_1.java
@@ -48,9 +48,9 @@ class EntityMap_1_12_1 extends EntityMap
 
     @Override
     @SuppressFBWarnings("DLS_DEAD_LOCAL_STORE")
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteClientbound( packet, oldId, newId );
+        super.rewriteClientbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
 
         // Special cases
         int readerIndex = packet.readerIndex();
@@ -156,15 +156,15 @@ class EntityMap_1_12_1 extends EntityMap
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteServerbound( packet, oldId, newId );
+        super.rewriteServerbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
         // Special cases
         int readerIndex = packet.readerIndex();
         int packetId = DefinedPacket.readVarInt( packet );
         int packetIdLength = packet.readerIndex() - readerIndex;
 
-        if ( packetId == 0x1E /* Spectate : PacketPlayInSpectate */ && !BungeeCord.getInstance().getConfig().isIpForward() )
+        if ( packetId == 0x1E /* Spectate : PacketPlayInSpectate */ && !server.getInfo().isIpForward() ) // MikroCord - server specific IP forwarding
         {
             UUID uuid = DefinedPacket.readUUID( packet );
             ProxiedPlayer player;
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_13.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_13.java
index d737fe25..7cccab01 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_13.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_13.java
@@ -48,9 +48,9 @@ class EntityMap_1_13 extends EntityMap
 
     @Override
     @SuppressFBWarnings("DLS_DEAD_LOCAL_STORE")
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, int protocolVersion)
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, int protocolVersion, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteClientbound( packet, oldId, newId );
+        super.rewriteClientbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
 
         // Special cases
         int readerIndex = packet.readerIndex();
@@ -156,15 +156,15 @@ class EntityMap_1_13 extends EntityMap
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteServerbound( packet, oldId, newId );
+        super.rewriteServerbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
         // Special cases
         int readerIndex = packet.readerIndex();
         int packetId = DefinedPacket.readVarInt( packet );
         int packetIdLength = packet.readerIndex() - readerIndex;
 
-        if ( packetId == 0x28 /* Spectate : PacketPlayInSpectate */ && !BungeeCord.getInstance().getConfig().isIpForward() )
+        if ( packetId == 0x28 /* Spectate : PacketPlayInSpectate */ && !server.getInfo().isIpForward() ) // MikroCord - server specific IP forwarding
         {
             UUID uuid = DefinedPacket.readUUID( packet );
             ProxiedPlayer player;
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_14.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_14.java
index 7c0ba80b..2968ec98 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_14.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_14.java
@@ -47,9 +47,9 @@ class EntityMap_1_14 extends EntityMap
 
     @Override
     @SuppressFBWarnings("DLS_DEAD_LOCAL_STORE")
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, int protocolVersion)
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, int protocolVersion, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteClientbound( packet, oldId, newId );
+        super.rewriteClientbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
 
         // Special cases
         int readerIndex = packet.readerIndex();
@@ -160,15 +160,15 @@ class EntityMap_1_14 extends EntityMap
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteServerbound( packet, oldId, newId );
+        super.rewriteServerbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
         // Special cases
         int readerIndex = packet.readerIndex();
         int packetId = DefinedPacket.readVarInt( packet );
         int packetIdLength = packet.readerIndex() - readerIndex;
 
-        if ( packetId == 0x2B /* Spectate : PacketPlayInSpectate */ && !BungeeCord.getInstance().getConfig().isIpForward() )
+        if ( packetId == 0x2B /* Spectate : PacketPlayInSpectate */ && !server.getInfo().isIpForward() ) // MikroCord - server specific IP forwarding
         {
             UUID uuid = DefinedPacket.readUUID( packet );
             ProxiedPlayer player;
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_8.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_8.java
index 8e2dbe69..06708830 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_8.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_8.java
@@ -49,9 +49,9 @@ class EntityMap_1_8 extends EntityMap
 
     @Override
     @SuppressFBWarnings("DLS_DEAD_LOCAL_STORE")
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteClientbound( packet, oldId, newId );
+        super.rewriteClientbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
 
         //Special cases
         int readerIndex = packet.readerIndex();
@@ -150,15 +150,15 @@ class EntityMap_1_8 extends EntityMap
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteServerbound( packet, oldId, newId );
+        super.rewriteServerbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
         //Special cases
         int readerIndex = packet.readerIndex();
         int packetId = DefinedPacket.readVarInt( packet );
         int packetIdLength = packet.readerIndex() - readerIndex;
 
-        if ( packetId == 0x18 /* Spectate */ && !BungeeCord.getInstance().getConfig().isIpForward() )
+        if ( packetId == 0x18 /* Spectate */ && !server.getInfo().isIpForward() ) // MikroCord - server specific IP forwarding
         {
             UUID uuid = DefinedPacket.readUUID( packet );
             ProxiedPlayer player;
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_9.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_9.java
index a4d0ea3f..56cb687c 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_9.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_9.java
@@ -48,9 +48,9 @@ class EntityMap_1_9 extends EntityMap
 
     @Override
     @SuppressFBWarnings("DLS_DEAD_LOCAL_STORE")
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteClientbound( packet, oldId, newId );
+        super.rewriteClientbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
 
         // Special cases
         int readerIndex = packet.readerIndex();
@@ -155,15 +155,15 @@ class EntityMap_1_9 extends EntityMap
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteServerbound( packet, oldId, newId );
+        super.rewriteServerbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
         // Special cases
         int readerIndex = packet.readerIndex();
         int packetId = DefinedPacket.readVarInt( packet );
         int packetIdLength = packet.readerIndex() - readerIndex;
 
-        if ( packetId == 0x1B /* Spectate : PacketPlayInSpectate */ && !BungeeCord.getInstance().getConfig().isIpForward() )
+        if ( packetId == 0x1B /* Spectate : PacketPlayInSpectate */ && !server.getInfo().isIpForward() ) // MikroCord - server specific IP forwarding
         {
             UUID uuid = DefinedPacket.readUUID( packet );
             ProxiedPlayer player;
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_9_4.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_9_4.java
index ae7ff10e..f3dc4ed0 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_9_4.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_9_4.java
@@ -48,9 +48,9 @@ class EntityMap_1_9_4 extends EntityMap
 
     @Override
     @SuppressFBWarnings("DLS_DEAD_LOCAL_STORE")
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteClientbound( packet, oldId, newId );
+        super.rewriteClientbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
 
         // Special cases
         int readerIndex = packet.readerIndex();
@@ -155,15 +155,15 @@ class EntityMap_1_9_4 extends EntityMap
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteServerbound( packet, oldId, newId );
+        super.rewriteServerbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
         // Special cases
         int readerIndex = packet.readerIndex();
         int packetId = DefinedPacket.readVarInt( packet );
         int packetIdLength = packet.readerIndex() - readerIndex;
 
-        if ( packetId == 0x1B /* Spectate : PacketPlayInSpectate */ && !BungeeCord.getInstance().getConfig().isIpForward() )
+        if ( packetId == 0x1B /* Spectate : PacketPlayInSpectate */ && !server.getInfo().isIpForward() ) // MikroCord - server specific IP forwarding
         {
             UUID uuid = DefinedPacket.readUUID( packet );
             ProxiedPlayer player;
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_Dummy.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_Dummy.java
index cb81d1dd..5fe5dca1 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_Dummy.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_Dummy.java
@@ -12,19 +12,19 @@ public class EntityMap_Dummy extends EntityMap {
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId) {
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) { // MikroCord - server specific IP forwarding
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, int protocolVersion) {
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, int protocolVersion, net.md_5.bungee.api.connection.Server server) { // MikroCord - server specific IP forwarding
     }
 
     @Override
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId) {
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) { // MikroCord - server specific IP forwarding
     }
 
     @Override
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, int protocolVersion) {
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, int protocolVersion, net.md_5.bungee.api.connection.Server server) { // MikroCord - server specific IP forwarding
     }
 }
 // Waterfall end
\ No newline at end of file
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_PE.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_PE.java
index 97dffa9e..17ae4cd2 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_PE.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_PE.java
@@ -11,13 +11,13 @@ public class EntityMap_PE extends EntityMap {
     static final EntityMap_PE INSTANCE = new EntityMap_PE();
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
 
     }
 
     @Override
-    public void rewriteClientbound(ByteBuf from, int oldId, int newId)
+    public void rewriteClientbound(ByteBuf from, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
         final ByteBuf to = from.duplicate();
         final int originalReader = from.readerIndex();
-- 
2.20.1 (Apple Git-117)

