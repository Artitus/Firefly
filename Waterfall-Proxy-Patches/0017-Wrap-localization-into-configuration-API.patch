From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Sun, 14 Apr 2019 20:47:31 +0300
Subject: [PATCH] Wrap localization into configuration API


diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyServer.java b/api/src/main/java/net/md_5/bungee/api/ProxyServer.java
index 4714408f1adbc90e57afc799e378601a2df46c18..2013df527ff15458bd5d0d877be12f60016c121b 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyServer.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyServer.java
@@ -355,6 +355,11 @@ public abstract class ProxyServer
          */
         BUNGEECORD,
 
+        /**
+         * BungeeCord messages
+         */
+        BUNGEECORD_MESSAGES,
+
         /**
          * Waterfall-specific configuration
          */
diff --git a/proxy/src/main/java/eu/mikroskeem/mikrocord/misc/ResourceBundleConfigurationWrapper.java b/proxy/src/main/java/eu/mikroskeem/mikrocord/misc/ResourceBundleConfigurationWrapper.java
new file mode 100644
index 0000000000000000000000000000000000000000..8e228ae9cd6df330b69a6fe4c8e32394a4ffe352
--- /dev/null
+++ b/proxy/src/main/java/eu/mikroskeem/mikrocord/misc/ResourceBundleConfigurationWrapper.java
@@ -0,0 +1,61 @@
+package eu.mikroskeem.mikrocord.misc;
+
+import lombok.RequiredArgsConstructor;
+import net.md_5.bungee.BungeeCord;
+import net.md_5.bungee.api.config.ConfigurationAdapter;
+import net.md_5.bungee.api.config.ListenerInfo;
+import net.md_5.bungee.api.config.ServerInfo;
+
+import java.util.Collection;
+import java.util.Map;
+
+/**
+ * @author Mark Vainomaa
+ */
+@RequiredArgsConstructor
+public final class ResourceBundleConfigurationWrapper implements ConfigurationAdapter {
+    private final BungeeCord bungeeCord;
+
+    @Override
+    public void load() {}
+
+    @Override
+    public String getString(String path, String def) {
+        return bungeeCord.getTranslationFromBundle(path);
+    }
+
+    @Override
+    public int getInt(String path, int def) {
+        throw new UnsupportedOperationException();
+    }
+
+    @Override
+    public boolean getBoolean(String path, boolean def) {
+        throw new UnsupportedOperationException();
+    }
+
+    @Override
+    public Collection<?> getList(String path, Collection<?> def) {
+        throw new UnsupportedOperationException();
+    }
+
+    @Override
+    public Map<String, ServerInfo> getServers() {
+        throw new UnsupportedOperationException();
+    }
+
+    @Override
+    public Collection<ListenerInfo> getListeners() {
+        throw new UnsupportedOperationException();
+    }
+
+    @Override
+    public Collection<String> getGroups(String player) {
+        throw new UnsupportedOperationException();
+    }
+
+    @Override
+    public Collection<String> getPermissions(String group) {
+        throw new UnsupportedOperationException();
+    }
+}
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index b8ac5b909faf1d1829f1145c278d6b418b4f157b..56d3560d2620ece47fa02a49f850cba90e239be4 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -112,6 +112,7 @@ public class BungeeCord extends ProxyServer
      */
     private ResourceBundle baseBundle;
     private ResourceBundle customBundle;
+    private ConfigurationAdapter localizationBundleWrapper; // MikroCord - Wrap localization into configuration API
     public EventLoopGroup bossEventLoopGroup, workerEventLoopGroup;
     /**
      * locations.yml save thread.
@@ -188,6 +189,8 @@ public class BungeeCord extends ProxyServer
         switch (configurationType) {
             case BUNGEECORD:
                 return configurationAdapter;
+            case BUNGEECORD_MESSAGES:
+                return localizationBundleWrapper;
             case WATERFALL:
                 return waterfallConfigurationAdapter;
             // Mikrocord start - Fork specific configuration
@@ -204,6 +207,9 @@ public class BungeeCord extends ProxyServer
             case BUNGEECORD:
                 configurationAdapter = adapter;
                 break;
+            case BUNGEECORD_MESSAGES:
+                localizationBundleWrapper = adapter;
+                break;
             case WATERFALL:
                 waterfallConfigurationAdapter = adapter;
                 break;
@@ -238,6 +244,7 @@ public class BungeeCord extends ProxyServer
         {
             baseBundle = ResourceBundle.getBundle( "messages", Locale.ENGLISH );
         }
+        localizationBundleWrapper = new eu.mikroskeem.mikrocord.misc.ResourceBundleConfigurationWrapper(this); // MikroCord - Wrap localization into configuration API
         reloadMessages();
 
         // This is a workaround for quite possibly the weirdest bug I have ever encountered in my life!
@@ -563,6 +570,7 @@ public class BungeeCord extends ProxyServer
 
     public void reloadMessages()
     {
+        localizationBundleWrapper.load(); // MikroCord - Wrap localization into configuration API
         File file = new File( "messages.properties" );
         if ( file.isFile() )
         {
@@ -578,6 +586,16 @@ public class BungeeCord extends ProxyServer
 
     @Override
     public String getTranslation(String name, Object... args)
+    // MikroCord start - Wrap localization into configuration API
+    {
+        String translation = "<translation '" + name + "' missing>";
+        String string;
+        if((string = this.localizationBundleWrapper.getString(name, (String) null)) != null)
+            translation = (args.length == 0) ? string : MessageFormat.format(string, args);
+        return translation;
+    }
+    public String getTranslationFromBundle(String name, Object... args)
+    // MikroCord end
     {
         String translation = "<translation '" + name + "' missing>";
         try
