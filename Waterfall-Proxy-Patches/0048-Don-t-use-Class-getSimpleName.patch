From 92c471ef11b2c50a5a4465ea06f9ed667decd704 Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Wed, 25 Sep 2019 10:52:00 +0300
Subject: [PATCH] Don't use Class#getSimpleName()


diff --git a/api/src/main/java/eu/mikroskeem/mikrocord/api/misc/ClassUtil.java b/api/src/main/java/eu/mikroskeem/mikrocord/api/misc/ClassUtil.java
new file mode 100644
index 00000000..c41b8037
--- /dev/null
+++ b/api/src/main/java/eu/mikroskeem/mikrocord/api/misc/ClassUtil.java
@@ -0,0 +1,31 @@
+package eu.mikroskeem.mikrocord.api.misc;
+
+import net.md_5.bungee.protocol.MinecraftDecoder;
+
+/**
+ * @author Mark Vainomaa
+ */
+public final class ClassUtil {
+    private ClassUtil() {}
+
+    public static String getClassName(Class<?> clazz) {
+        return getClassNameFromString(clazz.getName());
+    }
+
+    public static String getClassName(Object instance) {
+        return getClassNameFromString(instance.getClass().getName());
+    }
+
+    public static String getClassNameFromString(String className) {
+        int i = className.lastIndexOf('.');
+        return i > 0 ? className.substring(i) : className;
+    }
+
+    static {
+        try {
+            MinecraftDecoder.setGetClassNameFunction(ClassUtil::getClassName);
+        } catch (Throwable ignored) {
+            // Implementation might not be present at runtime (:
+        }
+    }
+}
diff --git a/api/src/main/java/net/md_5/bungee/Util.java b/api/src/main/java/net/md_5/bungee/Util.java
index 684abf4c..9ba9790b 100644
--- a/api/src/main/java/net/md_5/bungee/Util.java
+++ b/api/src/main/java/net/md_5/bungee/Util.java
@@ -65,7 +65,7 @@ public class Util
     {
         // TODO: We should use clear manually written exceptions
         StackTraceElement[] trace = t.getStackTrace();
-        return t.getClass().getSimpleName() + " : " + t.getMessage()
+        return eu.mikroskeem.mikrocord.api.misc.ClassUtil.getClassName(t.getClass()) + " : " + t.getMessage() // MikroCord - don't use Class#getSimpleName()
                 + ( ( trace.length > 0 ) ? " @ " + t.getStackTrace()[0].getClassName() + ":" + t.getStackTrace()[0].getLineNumber() : "" );
     }
 
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/MinecraftDecoder.java b/protocol/src/main/java/net/md_5/bungee/protocol/MinecraftDecoder.java
index b0d63201..8276f0c0 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/MinecraftDecoder.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/MinecraftDecoder.java
@@ -29,6 +29,7 @@ public class MinecraftDecoder extends MessageToMessageDecoder<ByteBuf>
     @Setter private static Runnable emptyPacketMetric;
     @Setter private static Runnable invalidPacketMetric;
     // MikroCord end
+    @Setter private static java.util.function.Function<Class<?>, String> getClassNameFunction; // MikroCord - don't use Class#getSimpleName()
 
     public MinecraftDecoder(Protocol protocol, boolean server, int protocolVersion) {
         this.protocol = protocol;
@@ -80,7 +81,7 @@ public class MinecraftDecoder extends MessageToMessageDecoder<ByteBuf>
             if (packetTypeInfo instanceof Integer) {
                 packetTypeStr = "id " + Integer.toHexString((Integer) packetTypeInfo);
             } else if (packetTypeInfo instanceof Class) {
-                packetTypeStr = "class " + ((Class) packetTypeInfo).getSimpleName();
+                packetTypeStr = "class " + getClassNameFunction.apply((Class) packetTypeInfo); // MikroCord - don't use Class#getSimpleName()
             } else {
                 packetTypeStr = "unknown";
             }
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index f2da5a85..f76ad5f4 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -345,6 +345,7 @@ public class BungeeCord extends ProxyServer
         {
             connectionThrottle = new ConnectionThrottle( config.getThrottle(), config.getThrottleLimit() );
         }
+        eu.mikroskeem.mikrocord.api.misc.ClassUtil.class.getName(); // MikroCord - don't use Class#getSimpleName()
         eu.mikroskeem.mikrocord.misc.PrometheusMetrics.initialize(); // MikroCord - add Prometheus metrics support
         startListeners();
 
diff --git a/proxy/src/main/java/net/md_5/bungee/netty/HandlerBoss.java b/proxy/src/main/java/net/md_5/bungee/netty/HandlerBoss.java
index a66099fc..282ece15 100644
--- a/proxy/src/main/java/net/md_5/bungee/netty/HandlerBoss.java
+++ b/proxy/src/main/java/net/md_5/bungee/netty/HandlerBoss.java
@@ -146,7 +146,7 @@ public class HandlerBoss extends ChannelInboundHandlerAdapter
                 {
                     ProxyServer.getInstance().getLogger().log( Level.WARNING, "{0} - {1}: {2}", new Object[]
                     {
-                        handler, cause.getClass().getSimpleName(), cause.getMessage()
+                        handler, eu.mikroskeem.mikrocord.api.misc.ClassUtil.getClassName(cause), cause.getMessage() // MikroCord - don't use Class#getSimpleName()
                     } );
                 } else if ( cause instanceof QuietException )
                 {
-- 
2.23.0

