From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Fri, 31 May 2019 13:10:44 +0300
Subject: [PATCH] Don't rewrite tablist on online mode and profile forwarding
 connections

Credit goes to xxDark, https://github.com/PaperMC/Waterfall/pull/386

diff --git a/api/src/main/java/eu/mikroskeem/mikrocord/api/config/MikroCordProxyConfig.java b/api/src/main/java/eu/mikroskeem/mikrocord/api/config/MikroCordProxyConfig.java
index f7ad5f76e771c50174c182f228487d247daab877..1c38c8e1c09d0c37e74b42f7952964ab83cf5724 100644
--- a/api/src/main/java/eu/mikroskeem/mikrocord/api/config/MikroCordProxyConfig.java
+++ b/api/src/main/java/eu/mikroskeem/mikrocord/api/config/MikroCordProxyConfig.java
@@ -57,4 +57,9 @@ public interface MikroCordProxyConfig {
      * @return Whether proxy should wait for all players to disconnect infinitely or not
      */
     boolean isWaitForAllPlayersToDisconnectInfinitely();
+
+    /**
+     * @return Whether tablist should be rewritten on online mode connections or not
+     */
+    boolean isAllowTablistRewrite();
 }
diff --git a/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java b/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
index 31c6bd3627fc360f3816f2787e0a0373d0b98124..c76c61a5c49e76600fe14f979b0663bcca63c2bc 100644
--- a/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
+++ b/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
@@ -46,6 +46,9 @@ public class MikroCordConfiguration extends WaterfallConfiguration {
     @Getter
     private boolean waitForAllPlayersToDisconnectInfinitely = true;
 
+    @Getter
+    private boolean allowTablistRewrite = true;
+
     @Override
     public void load() {
         super.load();
@@ -61,6 +64,7 @@ public class MikroCordConfiguration extends WaterfallConfiguration {
         tcpFastOpenEnabled = config.getBoolean("networking.tcp_fast_open.enabled", tcpFastOpenEnabled);
         tcpFastOpenMode = setupTfo(config.getInt("networking.tcp_fast_open.mode", tcpFastOpenMode.value));
         waitForAllPlayersToDisconnectInfinitely = config.getBoolean("shutdown.wait_for_all_players_to_disconnect_infinitely", waitForAllPlayersToDisconnectInfinitely);
+        allowTablistRewrite = config.getBoolean("allow_tablist_rewrite", allowTablistRewrite);
     }
 
     private TCPFastOpenMode setupTfo(int value) {
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
index 1f8a243953aa4cbade07781024634dbcfd894ac0..dde20137bf8bdb971d2ed67aa7f317e7fb47c15d 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
@@ -150,6 +150,7 @@ public class DownstreamBridge extends PacketHandler
     @Override
     public void handle(PlayerListItem playerList) throws Exception
     {
+        if (!this.bungee.getConfig().isAllowTablistRewrite() && con.getPendingConnection().isOnlineMode() && (this.bungee.getConfig().isVelocityForwardingSupport() || this.server.getInfo().isIpForward())) { con.getTabListHandler().onUpdate(playerList); return; } // MikroCord - don't rewrite tablist on online mode connections
         con.getTabListHandler().onUpdate( TabList.rewrite( playerList ) );
         throw CancelSendSignal.INSTANCE; // Always throw because of profile rewriting
     }
