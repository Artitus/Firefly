From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Sun, 14 Apr 2019 21:48:01 +0300
Subject: [PATCH] Implement KyoriPowered/text support


diff --git a/api/src/main/java/net/md_5/bungee/api/CommandSender.java b/api/src/main/java/net/md_5/bungee/api/CommandSender.java
index d58883110e3990bc017ec74582bc48a9f7b35db7..46056f0b12afd11d1bc261a5f899d30ca730c5c3 100644
--- a/api/src/main/java/net/md_5/bungee/api/CommandSender.java
+++ b/api/src/main/java/net/md_5/bungee/api/CommandSender.java
@@ -44,6 +44,29 @@ public interface CommandSender
      */
     public void sendMessage(BaseComponent message);
 
+    // MikroCord start - add KyoriPowered/text support
+    /**
+     * Send a message to this sender.
+     *
+     * @param message the message to send
+     */
+    default void sendMessage(net.kyori.text.Component message) {
+        sendMessage(new eu.mikroskeem.mikrocord.api.chat.AdapterComponent(message));
+    }
+
+    /**
+     * Send a message to this sender.
+     *
+     * @param message the message to send
+     */
+    default void sendMessage(net.kyori.text.Component... message) {
+        BaseComponent[] wrapped = java.util.stream.Stream.of(message)
+                .map(eu.mikroskeem.mikrocord.api.chat.AdapterComponent::new)
+                .toArray(BaseComponent[]::new);
+        sendMessage(wrapped);
+    }
+    // MikroCord end
+
     /**
      * Get all groups this user is part of. This returns an unmodifiable
      * collection.
diff --git a/api/src/main/java/net/md_5/bungee/api/connection/Connection.java b/api/src/main/java/net/md_5/bungee/api/connection/Connection.java
index 793b08596a831bf7eede3b1af328ca928fcaf2dd..cb72f1cc8a3f384be73614140f08075d19b39329 100644
--- a/api/src/main/java/net/md_5/bungee/api/connection/Connection.java
+++ b/api/src/main/java/net/md_5/bungee/api/connection/Connection.java
@@ -60,6 +60,20 @@ public interface Connection extends eu.mikroskeem.mikrocord.api.network.ChannelH
      */
     void disconnect(BaseComponent reason);
 
+    // MikroCord start - add KyoriPowered/text support
+    /**
+     * Disconnects this end of the connection for the specified reason. If this
+     * is an {@link ProxiedPlayer} the respective server connection will be
+     * closed too.
+     *
+     * @param reason the reason shown to the player / sent to the server on
+     * disconnect
+     */
+    default void disconnect(net.kyori.text.Component reason) {
+        disconnect(new eu.mikroskeem.mikrocord.api.chat.AdapterComponent(reason));
+    }
+    // MikroCord end
+
     /**
      * Gets whether this connection is currently open, ie: not disconnected, and
      * able to send / receive data.
diff --git a/chat/src/main/java/eu/mikroskeem/mikrocord/api/chat/AdapterComponent.java b/chat/src/main/java/eu/mikroskeem/mikrocord/api/chat/AdapterComponent.java
new file mode 100644
index 0000000000000000000000000000000000000000..f90ab199a6426681e2c30bdb456035919247b3a7
--- /dev/null
+++ b/chat/src/main/java/eu/mikroskeem/mikrocord/api/chat/AdapterComponent.java
@@ -0,0 +1,51 @@
+package eu.mikroskeem.mikrocord.api.chat;
+
+import com.google.gson.GsonBuilder;
+import com.google.gson.JsonElement;
+import com.google.gson.JsonSerializationContext;
+import com.google.gson.JsonSerializer;
+import lombok.AccessLevel;
+import lombok.NoArgsConstructor;
+import lombok.RequiredArgsConstructor;
+import net.kyori.text.Component;
+import net.kyori.text.serializer.gson.GsonComponentSerializer;
+import net.kyori.text.serializer.legacy.LegacyComponentSerializer;
+import net.md_5.bungee.api.chat.BaseComponent;
+
+import java.lang.reflect.Type;
+
+/**
+ * Taken from https://github.com/KyoriPowered/text-extras/blob/08d40992cde519f53acdd6593288e4d8f91a7cce/adapter-bungeecord/src/main/java/net/kyori/text/adapter/bungeecord/TextAdapter.java
+ *
+ * @author Mark Vainomaa
+ */
+@RequiredArgsConstructor
+public final class AdapterComponent extends BaseComponent {
+    private final Component component;
+
+    @Override
+    @SuppressWarnings("deprecation")
+    public String toLegacyText() {
+        return LegacyComponentSerializer.INSTANCE.serialize(this.component);
+    }
+
+    @Override
+    public BaseComponent duplicate() {
+        return this;
+    }
+
+    @NoArgsConstructor(access = AccessLevel.PRIVATE)
+    public static class Serializer implements JsonSerializer<AdapterComponent> {
+        public static final Serializer INSTANCE = new Serializer();
+
+        @Override
+        public JsonElement serialize(final AdapterComponent src, final Type typeOfSrc, final JsonSerializationContext context) {
+            return context.serialize(src.component);
+        }
+    }
+
+    public static GsonBuilder inject(GsonBuilder builder) {
+        return GsonComponentSerializer.populate(builder)
+                .registerTypeAdapter(AdapterComponent.class, AdapterComponent.Serializer.INSTANCE);
+    }
+}
diff --git a/chat/src/main/java/net/md_5/bungee/chat/ComponentSerializer.java b/chat/src/main/java/net/md_5/bungee/chat/ComponentSerializer.java
index 2a780694068d013775db0bed015b62f2b2285ca6..a9950b4ae1d860a3177d2fe3f80e7244037edcdb 100644
--- a/chat/src/main/java/net/md_5/bungee/chat/ComponentSerializer.java
+++ b/chat/src/main/java/net/md_5/bungee/chat/ComponentSerializer.java
@@ -20,8 +20,8 @@ import net.md_5.bungee.api.chat.TranslatableComponent;
 public class ComponentSerializer implements JsonDeserializer<BaseComponent>
 {
 
-    private static final JsonParser JSON_PARSER = new JsonParser();
-    private static final Gson gson = new GsonBuilder().
+    private final static JsonParser JSON_PARSER = new JsonParser();
+    private final static Gson gson = eu.mikroskeem.mikrocord.api.chat.AdapterComponent.inject(new GsonBuilder()). // MikroCord - add KyoriPowered/text support
             registerTypeAdapter( BaseComponent.class, new ComponentSerializer() ).
             registerTypeAdapter( TextComponent.class, new TextComponentSerializer() ).
             registerTypeAdapter( TranslatableComponent.class, new TranslatableComponentSerializer() ).
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index 56d3560d2620ece47fa02a49f850cba90e239be4..72087708b787bcb2192a0547fd70a435c13dfbbf 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -155,7 +155,7 @@ public class BungeeCord extends ProxyServer
     // Waterfall end
     @Getter
     private final Logger logger;
-    public final Gson gson = new GsonBuilder()
+    public final Gson gson = eu.mikroskeem.mikrocord.api.chat.AdapterComponent.inject(new GsonBuilder()) // MikroCord - add KyoriPowered/text support
             .registerTypeAdapter( BaseComponent.class, new ComponentSerializer() )
             .registerTypeAdapter( TextComponent.class, new TextComponentSerializer() )
             .registerTypeAdapter( TranslatableComponent.class, new TranslatableComponentSerializer() )
