From e59c6279f5a95a809b5f1a8e7c9ad073912c908d Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Tue, 19 Mar 2019 23:17:23 +0200
Subject: [PATCH] Add /grestart command


diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
index cbcf8a24..cd2f66a2 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
@@ -239,4 +239,16 @@ public interface ProxyConfig
      * @return Should we disable entity metadata rewriting?
      */
     boolean isDisableEntityMetadataRewrite();
+
+    // MikroCord start - add /grestart command
+    /**
+     * @return Player disconnect message on restart attempt
+     */
+    String getRestartMessage();
+
+    /**
+     * @return Script to be run on restart attempt
+     */
+    String getRestartScriptPath();
+    // MikroCord end
 }
diff --git a/proxy/src/main/java/eu/mikroskeem/mikrocord/command/CommandRestart.java b/proxy/src/main/java/eu/mikroskeem/mikrocord/command/CommandRestart.java
new file mode 100644
index 00000000..c95abc80
--- /dev/null
+++ b/proxy/src/main/java/eu/mikroskeem/mikrocord/command/CommandRestart.java
@@ -0,0 +1,51 @@
+package eu.mikroskeem.mikrocord.command;
+
+import com.google.common.base.Joiner;
+import io.netty.util.internal.PlatformDependent;
+import net.md_5.bungee.BungeeCord;
+import net.md_5.bungee.api.CommandSender;
+import net.md_5.bungee.api.plugin.Command;
+
+import java.nio.file.Files;
+import java.nio.file.Path;
+import java.nio.file.Paths;
+
+/**
+ * Proxy restart command
+ *
+ * @author Mark Vainomaa
+ */
+public final class CommandRestart extends Command {
+    public CommandRestart() {
+        super("grestart", "mikrocord.command.restart");
+    }
+
+    @Override
+    public void execute(CommandSender sender, String[] args) {
+        Runtime.getRuntime().addShutdownHook(new Thread(() -> {
+            Path scriptPath = Paths.get(BungeeCord.getInstance().getConfig().getRestartScriptPath()).toAbsolutePath();
+            if(Files.exists(scriptPath)) {
+                System.out.println("Attempting to restart with " + scriptPath);
+            } else {
+                System.out.println("Startup script '" + scriptPath + "' does not exist! Stopping proxy.");
+                return;
+            }
+
+            try {
+                if (PlatformDependent.isWindows()) {
+                    Runtime.getRuntime().exec("cmd /c start " + scriptPath);
+                } else {
+                    Runtime.getRuntime().exec("sh " + scriptPath);
+                }
+            } catch (Exception e) {
+                e.printStackTrace();
+            }
+        }, "Restart thread"));
+
+        if ( args.length == 0 ) {
+            BungeeCord.getInstance().stop(BungeeCord.getInstance().getConfig().getRestartMessage());
+        } else {
+            BungeeCord.getInstance().stop(Joiner.on( ' ' ).join(args));
+        }
+    }
+}
diff --git a/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java b/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
index 0b613f67..633e3093 100644
--- a/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
+++ b/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
@@ -1,6 +1,7 @@
 package eu.mikroskeem.mikrocord.conf;
 
 import io.github.waterfallmc.waterfall.conf.WaterfallConfiguration;
+import lombok.Getter;
 import net.md_5.bungee.api.ProxyServer;
 import net.md_5.bungee.api.config.ConfigurationAdapter;
 
@@ -8,10 +9,19 @@ import net.md_5.bungee.api.config.ConfigurationAdapter;
  * @author Mark Vainomaa
  */
 public class MikroCordConfiguration extends WaterfallConfiguration {
+    @Getter
+    private String restartMessage = "Proxy is restarting";
+
+    @Getter
+    private String restartScriptPath = "./restart.sh";
+
     @Override
     public void load() {
         super.load();
         ConfigurationAdapter config = ProxyServer.getInstance().getConfigurationAdapter(ProxyServer.ConfigurationType.MIKROCORD);
         config.load();
+
+        restartMessage = config.getString("restart.message", restartMessage);
+        restartScriptPath = config.getString("restart.script_path", restartScriptPath);
     }
 }
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index 7a98c8e3..b55cb83d 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -269,6 +269,9 @@ public class BungeeCord extends ProxyServer
         getPluginManager().registerCommand( null, new CommandIP() );
         getPluginManager().registerCommand( null, new CommandBungee() );
         getPluginManager().registerCommand( null, new CommandPerms() );
+        // MikroCord start - Fork specific commands
+        getPluginManager().registerCommand(null, new eu.mikroskeem.mikrocord.command.CommandRestart());
+        // MikroCord end
 
         if ( !Boolean.getBoolean( "net.md_5.bungee.native.disable" ) )
         {
diff --git a/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java b/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java
index e62951d7..5cd84940 100644
--- a/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java
+++ b/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java
@@ -103,7 +103,7 @@ public class YamlConfig implements ConfigurationAdapter
             } ) );
             set( "permissions.admin", Arrays.asList( new String[]
             {
-                "bungeecord.command.alert", "bungeecord.command.end", "bungeecord.command.ip", "bungeecord.command.reload"
+                "bungeecord.command.alert", "bungeecord.command.end", "bungeecord.command.ip", "bungeecord.command.reload", "mikrocord.command.restart" // MikroCord - /grestart command
             } ) );
         }
 
-- 
2.22.0

