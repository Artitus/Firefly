From e277a1605c2873c541cf7acfd1b17392f358caea Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Tue, 16 Apr 2019 21:51:47 +0300
Subject: [PATCH] Get rid of Prometheus support


diff --git a/proxy/pom.xml b/proxy/pom.xml
index e0de709a3..01c785f90 100644
--- a/proxy/pom.xml
+++ b/proxy/pom.xml
@@ -145,6 +145,7 @@
             <artifactId>raknet</artifactId>
             <version>0.6-SNAPSHOT</version>
         </dependency>
+        <!-- MikroCord start - get rid of Prometheus support
         <dependency>
             <groupId>io.prometheus</groupId>
             <artifactId>simpleclient</artifactId>
@@ -160,6 +161,7 @@
             <artifactId>simpleclient_httpserver</artifactId>
             <version>0.6.0</version>
         </dependency>
+        --> <!-- MikroCord end -->
         <!-- Waterdog end -->
     </dependencies>
 
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index 2ddfb9a93..66f0f1331 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -407,7 +407,9 @@ public class BungeeCord extends ProxyServer
                     //.option(UnixChannelOption.SO_REUSEPORT, true)
                     .childAttr(PipelineUtils.LISTENER, info)
                     .option(network.ycc.raknet.RakNet.SERVER_ID, UUID.randomUUID().getMostSignificantBits())
+                    /* MikroCord start - get rid of Prometheus support
                     .option(network.ycc.raknet.RakNet.METRICS, network.ycc.waterdog.pe.PERakNetMetrics.INSTANCE)
+                    */ // MikroCord end
                     .childOption(network.ycc.raknet.RakNet.USER_DATA_ID, 0xFE)
                     .handler(new network.ycc.waterdog.pe.PEPipelineUtils.ServerChannel(this, info))
                     .childHandler(network.ycc.waterdog.pe.PEPipelineUtils.SERVER_CHILD)
diff --git a/proxy/src/main/java/network/ycc/waterdog/pe/PECompressor.java b/proxy/src/main/java/network/ycc/waterdog/pe/PECompressor.java
index 0ae0109ac..c651bf9cf 100644
--- a/proxy/src/main/java/network/ycc/waterdog/pe/PECompressor.java
+++ b/proxy/src/main/java/network/ycc/waterdog/pe/PECompressor.java
@@ -54,7 +54,9 @@ public class PECompressor extends ChannelOutboundHandlerAdapter {
                 flushData(ctx);
             }
             promise.trySuccess();
+            /* MikroCord start - get rid of Prometheus support
             PERakNetMetrics.INSTANCE.outPrePacket.inc(1);
+            */ // MikroCord end
             return;
         }
         super.write(ctx, msg, promise);
@@ -71,9 +73,13 @@ public class PECompressor extends ChannelOutboundHandlerAdapter {
     protected void flushData(ChannelHandlerContext ctx) throws DataFormatException {
         final ByteBuf out = ctx.alloc().directBuffer(128);
         Preconditions.checkArgument(stashBuffer.hasMemoryAddress(), "pre-compression buffer is not direct");
+        /* MikroCord start - get rid of Prometheus support
         PERakNetMetrics.INSTANCE.outPreComp.inc(stashBuffer.readableBytes());
+        */ // MikroCord end
         zlib.process(stashBuffer, out);
+        /* MikroCord start - get rid of Prometheus support
         PERakNetMetrics.INSTANCE.outPostComp.inc(out.readableBytes());
+        */ // MikroCord end
         stashBuffer.clear();
         ctx.write(out).addListener(ChannelFutureListener.FIRE_EXCEPTION_ON_FAILURE);
     }
diff --git a/proxy/src/main/java/network/ycc/waterdog/pe/PERakNetMetrics.java b/proxy/src/main/java/network/ycc/waterdog/pe/PERakNetMetrics.java
index b2658d4c8..1083fcf49 100644
--- a/proxy/src/main/java/network/ycc/waterdog/pe/PERakNetMetrics.java
+++ b/proxy/src/main/java/network/ycc/waterdog/pe/PERakNetMetrics.java
@@ -1,11 +1,13 @@
 package network.ycc.waterdog.pe;
 
+/* MikroCord start - get rid of Prometheus support
 import io.prometheus.client.Counter;
 import io.prometheus.client.Gauge;
 import io.prometheus.client.Histogram;
 import io.prometheus.client.exporter.HTTPServer;
 import io.prometheus.client.hotspot.DefaultExports;
 
+*/ // MikroCord end
 import network.ycc.raknet.RakNet;
 
 import java.io.IOException;
@@ -16,6 +18,7 @@ public class PERakNetMetrics implements RakNet.MetricsLogger {
 
     public static final PERakNetMetrics INSTANCE = new PERakNetMetrics();
 
+    /* MikroCord start - get rid of Prometheus support
     static {
         final int port = 1271; //Utils.getJavaPropertyValue("metrics-port", 1271, Integer::parseInt);
         DefaultExports.initialize();
@@ -102,4 +105,5 @@ public class PERakNetMetrics implements RakNet.MetricsLogger {
     public void measureRTTnsStdDev(long n) {
         rttGauge.set(n * sPerNs);
     }
+    */ // MikroCord end
 }
-- 
2.21.0

