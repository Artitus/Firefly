From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Wed, 29 May 2019 13:15:28 +0300
Subject: [PATCH] Add option to exclude logging invalid query packets


diff --git a/api/src/main/java/eu/mikroskeem/mikrocord/api/config/MikroCordProxyConfig.java b/api/src/main/java/eu/mikroskeem/mikrocord/api/config/MikroCordProxyConfig.java
index ce8ac985963227c49e05e42ed49c5d2e1c0bd415..93c4dd3d0d0298973c6b0c70e60ff7db24ba06f9 100644
--- a/api/src/main/java/eu/mikroskeem/mikrocord/api/config/MikroCordProxyConfig.java
+++ b/api/src/main/java/eu/mikroskeem/mikrocord/api/config/MikroCordProxyConfig.java
@@ -25,4 +25,9 @@ public interface MikroCordProxyConfig {
      */
     @NonNull
     Set<@NonNull String> getIgnoredLogCommands();
+
+    /**
+     * @return Whether invalid query packets should be logged or not
+     */
+    boolean isLogInvalidQueryPackets();
 }
diff --git a/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java b/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
index 000a9861436fa8777c8d18c0654454235d9cb093..a8d6c8e3b223341bab21201f48adff613d8e0e3d 100644
--- a/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
+++ b/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
@@ -22,6 +22,9 @@ public class MikroCordConfiguration extends WaterfallConfiguration {
     @Getter
     private Set<String> ignoredLogCommands;
 
+    @Getter
+    private boolean logInvalidQueryPackets = false;
+
     @Override
     public void load() {
         super.load();
diff --git a/query/src/main/java/net/md_5/bungee/query/QueryHandler.java b/query/src/main/java/net/md_5/bungee/query/QueryHandler.java
index 0300b897cdea41e512fb13abe319a936d5787b7e..532e2c677a4691d2970d2915197d2d184f6cbe9b 100644
--- a/query/src/main/java/net/md_5/bungee/query/QueryHandler.java
+++ b/query/src/main/java/net/md_5/bungee/query/QueryHandler.java
@@ -70,6 +70,7 @@ public class QueryHandler extends SimpleChannelInboundHandler<DatagramPacket>
         ByteBuf in = msg.content();
         if ( in.readUnsignedByte() != 0xFE || in.readUnsignedByte() != 0xFD )
         {
+            if (bungee.getConfig().isLogInvalidQueryPackets()) // MikroCord - Add option to exclude logging invalid query packets
             bungee.getLogger().log( Level.WARNING, "Query - Incorrect magic!: {0}", msg.sender() );
             return;
         }
@@ -97,6 +98,7 @@ public class QueryHandler extends SimpleChannelInboundHandler<DatagramPacket>
             QuerySession session = sessions.getIfPresent( msg.sender().getAddress() );
             if ( session == null || session.getToken() != challengeToken )
             {
+                if (!bungee.getConfig().isLogInvalidQueryPackets()) return; // MikroCord - Add option to exclude logging invalid query packets
                 throw cachedNoSessionException; // Waterfall
             }
 
