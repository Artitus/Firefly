From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Tue, 26 Nov 2019 19:51:00 +0200
Subject: [PATCH] Attempt to make supported protocol id checking faster


diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/ProtocolConstants.java b/protocol/src/main/java/net/md_5/bungee/protocol/ProtocolConstants.java
index 30b4d05940fcfbfc79977d9750c0bdf0f154031e..5c37cc3029153b4e40fcb7134a71c8b6f34f2a5e 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/ProtocolConstants.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/ProtocolConstants.java
@@ -73,6 +73,28 @@ public class ProtocolConstants
             ProtocolConstants.MINECRAFT_1_16_3, // Waterfall
             ProtocolConstants.MINECRAFT_1_16_4 // Waterfall
     );
+    // Firefly start
+    public static final int LOWEST_SUPPORTED_VERSION_ID;
+    public static final int HIGHEST_SUPPORTED_VERSION_ID;
+    private static final boolean[] SUPPORTED_VERSION_IDS_FAST;
+    static {
+        LOWEST_SUPPORTED_VERSION_ID = SUPPORTED_VERSION_IDS.get(0);
+        HIGHEST_SUPPORTED_VERSION_ID = SUPPORTED_VERSION_IDS.get(SUPPORTED_VERSION_IDS.size() - 1);
+        var arraySize = HIGHEST_SUPPORTED_VERSION_ID - LOWEST_SUPPORTED_VERSION_ID + 1;
+        SUPPORTED_VERSION_IDS_FAST = new boolean[arraySize];
+        for (var supportedVersionId : SUPPORTED_VERSION_IDS) {
+            var index = supportedVersionId - LOWEST_SUPPORTED_VERSION_ID;
+            SUPPORTED_VERSION_IDS_FAST[index] = true;
+        }
+    }
+
+    public static boolean isSupportedProtocol(int protocolId) {
+        var protocolIndex = protocolId - LOWEST_SUPPORTED_VERSION_ID;
+        return protocolIndex >= 0 &&
+                protocolIndex < ProtocolConstants.SUPPORTED_VERSION_IDS_FAST.length &&
+                ProtocolConstants.SUPPORTED_VERSION_IDS_FAST[protocolIndex];
+    }
+    // Firefly end
 
     public static final boolean isBeforeOrEq(int before, int other)
     {
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index 3a3c2fbd39874de0991571fa1f4c84aedc42b68c..476636ee2ced03825d6233fc0d7e584c0ebed595 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -808,7 +808,7 @@ public class BungeeCord extends ProxyServer
     @Override
     public int getProtocolVersion()
     {
-        return ProtocolConstants.SUPPORTED_VERSION_IDS.get( ProtocolConstants.SUPPORTED_VERSION_IDS.size() - 1 );
+        return ProtocolConstants.HIGHEST_SUPPORTED_VERSION_ID; //SUPPORTED_VERSION_IDS.get( ProtocolConstants.SUPPORTED_VERSION_IDS.size() - 1 ); // Firefly
     }
 
     @Override
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
index 2112d9fd5fd04715442a844d4359f3281f258b25..1565380bada55322527d6b23741e33510ecb3666 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
@@ -237,7 +237,7 @@ public class InitialHandler extends PacketHandler implements PendingConnection
 
         ServerInfo forced = AbstractReconnectHandler.getForcedHost( this );
         final String motd = ( forced != null ) ? forced.getMotd() : listener.getMotd();
-        final int protocol = ( ProtocolConstants.SUPPORTED_VERSION_IDS.contains( handshake.getProtocolVersion() ) ) ? handshake.getProtocolVersion() : bungee.getProtocolVersion();
+        final int protocol = ( ProtocolConstants.isSupportedProtocol(/*SUPPORTED_VERSION_IDS.contains(*/ handshake.getProtocolVersion() ) ) ? handshake.getProtocolVersion() : bungee.getProtocolVersion(); // Firefly
 
         Callback<ServerPing> pingBack = new Callback<ServerPing>()
         {
@@ -340,7 +340,7 @@ public class InitialHandler extends PacketHandler implements PendingConnection
                 thisState = State.USERNAME;
                 ch.setProtocol( Protocol.LOGIN );
 
-                if ( !ProtocolConstants.SUPPORTED_VERSION_IDS.contains( handshake.getProtocolVersion() ) )
+                if ( !ProtocolConstants.isSupportedProtocol(handshake.getProtocolVersion())) //.SUPPORTED_VERSION_IDS.contains( handshake.getProtocolVersion() ) ) // Firefly
                 {
                     if ( handshake.getProtocolVersion() > bungee.getProtocolVersion() )
                     {
