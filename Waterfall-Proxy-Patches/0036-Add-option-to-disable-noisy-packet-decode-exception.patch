From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Thu, 15 Aug 2019 17:26:50 +0300
Subject: [PATCH] Add option to disable noisy packet decode exception


diff --git a/api/src/main/java/eu/mikroskeem/firefly/api/config/FireflyProxyConfig.java b/api/src/main/java/eu/mikroskeem/firefly/api/config/FireflyProxyConfig.java
index d6eba7208ce9063df112215150a1e42f7274d35f..17aa4a1d1a8bc85cf9e15e742e23166d456eaa0e 100644
--- a/api/src/main/java/eu/mikroskeem/firefly/api/config/FireflyProxyConfig.java
+++ b/api/src/main/java/eu/mikroskeem/firefly/api/config/FireflyProxyConfig.java
@@ -74,4 +74,9 @@ public interface FireflyProxyConfig {
      * @return Whether plugins list should be populated in GS4 query response or not
      */
     boolean isPopulateGS4QueryPlugins();
+
+    /**
+     * @return Whether packet decode exceptions should be noisy or not
+     */
+    boolean isLogNoisyPacketDecodeException();
 }
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/MinecraftDecoder.java b/protocol/src/main/java/net/md_5/bungee/protocol/MinecraftDecoder.java
index 6c3c7ab8d872c7acffa0b1897c10ccdd9b1aefd2..20e207ce1cb8da13102a155e0e88b92d349793ed 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/MinecraftDecoder.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/MinecraftDecoder.java
@@ -20,11 +20,16 @@ public class MinecraftDecoder extends MessageToMessageDecoder<ByteBuf>
     private int protocolVersion;
     @Setter
     private boolean supportsForge = false;
+    // Firefly start - add option to disable noisy packet decode exception
+    @Setter private static java.util.function.BooleanSupplier noisyPacketDecodeExceptionSupplier;
+    private final boolean noisyPacketDecodeException;
+    // Firefly end
 
     public MinecraftDecoder(Protocol protocol, boolean server, int protocolVersion) {
         this.protocol = protocol;
         this.server = server;
         this.protocolVersion = protocolVersion;
+        this.noisyPacketDecodeException = noisyPacketDecodeExceptionSupplier.getAsBoolean(); // Firefly - add option to disable noisy packet decode exception
     }
 
     @Override
@@ -71,7 +76,16 @@ public class MinecraftDecoder extends MessageToMessageDecoder<ByteBuf>
             } else {
                 packetTypeStr = "unknown";
             }
+            /* // Firefly start - add option to disable noisy packet decode exception
             throw new FastDecoderException("Error decoding packet " + packetTypeStr + " with contents:\n" + ByteBufUtil.prettyHexDump(slice), e); // Waterfall
+            */
+            FastDecoderException de = new FastDecoderException("Error decoding packet " + packetTypeStr + " with contents:\n" + ByteBufUtil.prettyHexDump(slice), e);
+            if (!this.noisyPacketDecodeException) {
+                de.setStackTrace(new StackTraceElement[0]);
+                de.getCause().setStackTrace(new StackTraceElement[0]);
+            }
+            throw de;
+            // Firefly end
         } finally
         {
             if ( slice != null )
diff --git a/proxy/src/main/java/eu/mikroskeem/firefly/conf/FireflyConfiguration.java b/proxy/src/main/java/eu/mikroskeem/firefly/conf/FireflyConfiguration.java
index 6be14f7699ff4254ba6e7b66fd20f27b2304be41..20cfd14d69d294d70506b8694c311af513e573da 100644
--- a/proxy/src/main/java/eu/mikroskeem/firefly/conf/FireflyConfiguration.java
+++ b/proxy/src/main/java/eu/mikroskeem/firefly/conf/FireflyConfiguration.java
@@ -9,6 +9,7 @@ import lombok.Getter;
 import net.md_5.bungee.api.ProxyServer;
 import net.md_5.bungee.api.config.ConfigurationAdapter;
 import net.md_5.bungee.netty.PipelineUtils;
+import net.md_5.bungee.protocol.MinecraftDecoder;
 
 import java.nio.charset.StandardCharsets;
 import java.util.HashSet;
@@ -19,6 +20,11 @@ import java.util.logging.Level;
  * @author Mark Vainomaa
  */
 public class FireflyConfiguration extends WaterfallConfiguration {
+    public FireflyConfiguration() {
+        // Set up accessors
+        MinecraftDecoder.setNoisyPacketDecodeExceptionSupplier(this::isLogNoisyPacketDecodeException);
+    }
+
     @Getter
     private String restartMessage = "Proxy is restarting";
 
@@ -55,6 +61,9 @@ public class FireflyConfiguration extends WaterfallConfiguration {
     @Getter
     private boolean populateGS4QueryPlugins = false;
 
+    @Getter
+    private boolean logNoisyPacketDecodeException = false;
+
     @Override
     public void load() {
         super.load();
@@ -73,6 +82,7 @@ public class FireflyConfiguration extends WaterfallConfiguration {
         allowTablistRewrite = config.getBoolean("performance.allow_tablist_rewrite", allowTablistRewrite);
         internScoreboardTeamStrings = config.getBoolean("performance.intern_scoreboard_team_strings", internScoreboardTeamStrings);
         populateGS4QueryPlugins = config.getBoolean("query.populate_plugins", populateGS4QueryPlugins);
+        logNoisyPacketDecodeException = config.getBoolean("log.noisy_packet_decode_exception", logNoisyPacketDecodeException);
     }
 
     private TCPFastOpenMode setupTfo(int value) {
