From 60f686cfac08902550a4678257900c191ed0b6d5 Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Mon, 17 Jun 2019 14:45:40 +0300
Subject: [PATCH] Save memory on scoreboard teams


diff --git a/api/src/main/java/net/md_5/bungee/api/score/Team.java b/api/src/main/java/net/md_5/bungee/api/score/Team.java
index 25526320..6e1c8879 100644
--- a/api/src/main/java/net/md_5/bungee/api/score/Team.java
+++ b/api/src/main/java/net/md_5/bungee/api/score/Team.java
@@ -18,8 +18,8 @@ public class Team
     private String prefix;
     private String suffix;
     private byte friendlyFire;
-    private String nameTagVisibility;
-    private String collisionRule;
+    private NametagVisibility nameTagVisibility; // MikroCord - save memory on scoreboard teams
+    private CollisionRule collisionRule; // MikroCord - save memory on scoreboard teams
     private int color;
     private Set<String> players = LowMemorySet.create();
 
@@ -37,4 +37,80 @@ public class Team
     {
         players.remove( name );
     }
+
+    // MikroCord start - save memory on scoreboard teams
+    @Deprecated
+    public String getNameTagVisibility() {
+        return nameTagVisibility.getValue();
+    }
+
+    @Deprecated
+    public void setNameTagVisibility(String value) {
+        NametagVisibility enumValue;
+        if (value == null) {
+            enumValue = NametagVisibility.ALWAYS;
+        } else if ((enumValue = NametagVisibility.VALUES.get(value)) == null) {
+            net.md_5.bungee.api.ProxyServer.getInstance().getLogger().log(java.util.logging.Level.WARNING, "Unknown team name tag visibility value: {0} -> {1}", new Object[] { name, value });
+            enumValue = NametagVisibility.ALWAYS;
+        }
+        this.nameTagVisibility = enumValue;
+    }
+
+    @Deprecated
+    public String getCollisionRule() {
+        return collisionRule.getValue();
+    }
+
+    @Deprecated
+    public void setCollisionRule(String value) {
+        CollisionRule enumValue;
+        if (value == null) {
+            enumValue = CollisionRule.ALWAYS;
+        } else if ((enumValue = CollisionRule.VALUES.get(value)) == null) {
+            net.md_5.bungee.api.ProxyServer.getInstance().getLogger().log(java.util.logging.Level.WARNING, "Unknown team collision rule value: {0} -> {1}", new Object[] { name, value });
+            enumValue = CollisionRule.ALWAYS;
+        }
+        this.collisionRule = enumValue;
+    }
+
+    @RequiredArgsConstructor
+    public enum CollisionRule {
+        ALWAYS("always"),
+        PUSH_OTHER_TEAMS("pushOtherTeams"),
+        PUSH_OWN_TEAM("pushOwnTeam"),
+        NEVER("never"),
+        ;
+
+        @Getter
+        private final String value;
+
+        public static final java.util.Map<String, CollisionRule> VALUES = new java.util.HashMap<>();
+
+        static {
+            for (CollisionRule value : values()) {
+                VALUES.put(value.getValue(), value);
+            }
+        }
+    }
+
+    @RequiredArgsConstructor
+    public enum NametagVisibility {
+        ALWAYS("always"),
+        HIDE_FOR_OTHER_TEAMS("hideForOtherTeams"),
+        HIDE_FOR_OWN_TEAM("hideForOwnTeam"),
+        NEVER("never"),
+        ;
+
+        @Getter
+        private final String value;
+
+        public static final java.util.Map<String, NametagVisibility> VALUES = new java.util.HashMap<>();
+
+        static {
+            for (NametagVisibility value : values()) {
+                VALUES.put(value.getValue(), value);
+            }
+        }
+    }
+    // MikroCord end
 }
-- 
2.22.0

