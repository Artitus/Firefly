From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Sat, 5 Oct 2019 16:07:06 +0300
Subject: [PATCH] Server specific IP and profile forwarding

Improved patch of previous version with support for per-server modern
and legacy forwarding types

diff --git a/api/src/main/java/eu/mikroskeem/mikrocord/api/config/MikroCordProxyConfig.java b/api/src/main/java/eu/mikroskeem/mikrocord/api/config/MikroCordProxyConfig.java
index a67f3667c40aacba2d7cfe27cc6bd39950f0792a..ea7bc8574316253975813176519cfd3214b6c753 100644
--- a/api/src/main/java/eu/mikroskeem/mikrocord/api/config/MikroCordProxyConfig.java
+++ b/api/src/main/java/eu/mikroskeem/mikrocord/api/config/MikroCordProxyConfig.java
@@ -32,11 +32,6 @@ public interface MikroCordProxyConfig {
      */
     boolean isLogInvalidQueryPackets();
 
-    /**
-     * @return Whether Velocity modern forwarding support is enabled or not
-     */
-    boolean isVelocityForwardingSupport();
-
     /**
      * @return Velocity modern forwarding secret
      */
diff --git a/api/src/main/java/eu/mikroskeem/mikrocord/api/connection/ForwardingType.java b/api/src/main/java/eu/mikroskeem/mikrocord/api/connection/ForwardingType.java
new file mode 100644
index 0000000000000000000000000000000000000000..f45a874f82a3433272cdb0cb62f308017872df06
--- /dev/null
+++ b/api/src/main/java/eu/mikroskeem/mikrocord/api/connection/ForwardingType.java
@@ -0,0 +1,51 @@
+package eu.mikroskeem.mikrocord.api.connection;
+
+import java.util.Locale;
+
+/**
+ * @author Mark Vainomaa
+ */
+public enum ForwardingType {
+    /**
+     * IP and profile forwarding is off (vanilla)
+     */
+    OFF,
+
+    /**
+     * IP and profile forwarding is done in BungeeCord way by modifying handshake packet
+     */
+    BUNGEECORD,
+
+    /**
+     * IP and profile forwarding is done in Velocity way by utilizing Login Plugin Request/Response packets,
+     * which are available in 1.13+
+     */
+    VELOCITY
+    ;
+
+    public boolean isOff() {
+        return this == OFF;
+    }
+
+    public boolean isVelocity() {
+        return this == VELOCITY;
+    }
+
+    public boolean isBungeeCord() {
+        return this == BUNGEECORD;
+    }
+
+    public static ForwardingType fromString(String rawValue) {
+        if (rawValue.equalsIgnoreCase("true") || rawValue.equalsIgnoreCase("false")) {
+            // Legacy
+            return rawValue.equalsIgnoreCase("true") ? BUNGEECORD : OFF;
+        }
+
+        rawValue = rawValue.toUpperCase(Locale.ROOT);
+        try {
+            return valueOf(rawValue);
+        } catch (IllegalArgumentException e) {
+            throw new IllegalArgumentException("Invalid forwarding type: " + rawValue);
+        }
+    }
+}
diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
index b31964df1b7a7d759181022ed8f33ca4ada85c54..b95a8b1b85ebe1f84de9e2f2701cf38715b5bfa3 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
@@ -191,6 +191,9 @@ public interface ProxyConfig extends eu.mikroskeem.mikrocord.api.config.MikroCor
      */
     @Deprecated
     boolean isIpForward();
+    // MikroCord start - server specific IP forwarding
+    eu.mikroskeem.mikrocord.api.connection.ForwardingType getIpForwardType();
+    // MikroCord end
 
     /**
      * The encoded favicon.
diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyServer.java b/api/src/main/java/net/md_5/bungee/api/ProxyServer.java
index 2013df527ff15458bd5d0d877be12f60016c121b..a53421b308f9fa056f0305c0aa3c15f3af2d38d6 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyServer.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyServer.java
@@ -242,8 +242,13 @@ public abstract class ProxyServer
      * @param restricted whether the server info restricted property will be set
      * @return the constructed instance
      */
-    public abstract ServerInfo constructServerInfo(String name, InetSocketAddress address, String motd, boolean restricted);
+    // MikroCord start - server specific IP forwarding
+    public ServerInfo constructServerInfo(String name, InetSocketAddress address, String motd, boolean restricted) {
+        return constructServerInfo(name, (SocketAddress) address, motd, restricted, getConfig().getIpForwardType());
+    }
+    // MikroCord end
 
+    // MikroCord start - server specific IP forwarding
     /**
      * Factory method to construct an implementation specific server info
      * instance.
@@ -252,9 +257,44 @@ public abstract class ProxyServer
      * @param address connectable Minecraft address + port of the server
      * @param motd the motd when used as a forced server
      * @param restricted whether the server info restricted property will be set
+     * @param ipForwardType IP forwarding method used by this server
      * @return the constructed instance
      */
-    public abstract ServerInfo constructServerInfo(String name, SocketAddress address, String motd, boolean restricted);
+    public ServerInfo constructServerInfo(String name, InetSocketAddress address, String motd, boolean restricted, eu.mikroskeem.mikrocord.api.connection.ForwardingType ipForwardType) {
+        return constructServerInfo(name, (SocketAddress) address, motd, restricted, ipForwardType);
+    }
+
+    // MikroCord start - server specific IP forwarding
+    /**
+     * Factory method to construct an implementation specific server info
+     * instance.
+     *
+     * @param name name of the server
+     * @param address connectable Minecraft address + port of the server
+     * @param motd the motd when used as a forced server
+     * @param restricted whether the server info restricted property will be set
+     * @param ipForwardType IP forwarding method used by this server
+     * @return the constructed instance
+     */
+    public abstract ServerInfo constructServerInfo(String name, SocketAddress address, String motd, boolean restricted, eu.mikroskeem.mikrocord.api.connection.ForwardingType ipForwardType);
+    // MikroCord end
+
+
+    /**
+     * Factory method to construct an implementation specific server info
+     * instance.
+     *
+     * @param name name of the server
+     * @param address connectable Minecraft address + port of the server
+     * @param motd the motd when used as a forced server
+     * @param restricted whether the server info restricted property will be set
+     * @return the constructed instance
+     */
+    // MikroCord start - server specific IP forwarding
+    public ServerInfo constructServerInfo(String name, SocketAddress address, String motd, boolean restricted) {
+        return constructServerInfo(name, address, motd, restricted, getConfig().getIpForwardType());
+    }
+    // MikroCord end
 
     /**
      * Returns the console overlord for this proxy. Being the console, this
diff --git a/api/src/main/java/net/md_5/bungee/api/config/ServerInfo.java b/api/src/main/java/net/md_5/bungee/api/config/ServerInfo.java
index b0fc000a32f35d68623fdf07f173e534f30ae42d..0cea0e63bf5d6c69dd834c68c2d30234120a1b3a 100644
--- a/api/src/main/java/net/md_5/bungee/api/config/ServerInfo.java
+++ b/api/src/main/java/net/md_5/bungee/api/config/ServerInfo.java
@@ -115,4 +115,12 @@ public interface ServerInfo
      * @param callback the callback to call when the count has been retrieved.
      */
     void ping(Callback<ServerPing> callback);
+    // MikroCord start - server specific IP forwarding
+    /**
+     * Returns IP and profile forwarding method used by this server
+     *
+     * @return IP and profile forwarding method used by this server
+     */
+    default eu.mikroskeem.mikrocord.api.connection.ForwardingType getIpForwardType() { return net.md_5.bungee.api.ProxyServer.getInstance().getConfig().getIpForwardType(); }
+    // MikroCord end
 }
diff --git a/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java b/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
index f243777118b19e199411b66b89759a7b85919f45..c70c1212d2ba4a6777b5ab6f4e5d6662153d83b2 100644
--- a/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
+++ b/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
@@ -37,9 +37,6 @@ public class MikroCordConfiguration extends WaterfallConfiguration {
     @Getter
     private boolean logInvalidQueryPackets = false;
 
-    @Getter
-    private boolean velocityForwardingSupport = false;
-
     @Getter
     private byte[] velocityForwardingSecret;
 
@@ -83,7 +80,6 @@ public class MikroCordConfiguration extends WaterfallConfiguration {
         restartScriptPath = config.getString("restart.script_path", restartScriptPath);
         ignoredLogCommands = new HashSet<>(config.getList("log.ignored_commands", () -> ImmutableList.of("login", "register", "changepassword")));
         logInvalidQueryPackets = config.getBoolean("log.invalid_query_packets", logInvalidQueryPackets);
-        velocityForwardingSupport = config.getBoolean("velocity_modern_forwarding.enabled", velocityForwardingSupport);
         velocityForwardingSecret = config.getString("velocity_modern_forwarding.secret", () -> VelocitySupport.generateRandomString(12)).getBytes(StandardCharsets.UTF_8);
         tcpFastOpenEnabled = config.getBoolean("networking.tcp_fast_open.enabled", tcpFastOpenEnabled);
         tcpFastOpenMode = setupTfo(config.getInt("networking.tcp_fast_open.mode", tcpFastOpenMode.value));
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index b76356884fdcbd8b0400e7ab5cb6a497903f7a38..ece535c4de44406116c3df4c02c7f78141b61d27 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -783,15 +783,10 @@ public class BungeeCord extends ProxyServer
     }
 
     @Override
-    public ServerInfo constructServerInfo(String name, InetSocketAddress address, String motd, boolean restricted)
+    public ServerInfo constructServerInfo(String name, SocketAddress address, String motd, boolean restricted, eu.mikroskeem.mikrocord.api.connection.ForwardingType ipForwardType) // MikroCord - server specific IP forwarding
     {
-        return constructServerInfo( name, (SocketAddress) address, motd, restricted );
-    }
-
-    @Override
-    public ServerInfo constructServerInfo(String name, SocketAddress address, String motd, boolean restricted)
-    {
-        return new BungeeServerInfo( name, address, motd, restricted );
+        Preconditions.checkNotNull( ipForwardType, "ipForwardType" ); // MikroCord - server specific IP forwarding
+        return new BungeeServerInfo( name, address, motd, restricted, ipForwardType ); // MikroCord - server specific IP forwarding
     }
 
     @Override
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeServerInfo.java b/proxy/src/main/java/net/md_5/bungee/BungeeServerInfo.java
index 7b002089ef9dd9f365dc0f7db076976b8dc6260c..170dfe4b331d5da4fff73a7321b45e590e66c2ad 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeServerInfo.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeServerInfo.java
@@ -36,6 +36,7 @@ import net.md_5.bungee.protocol.packet.PluginMessage;
 @ToString(of =
 {
     "name", "socketAddress", "restricted"
+        , "ipForwardType" // MikroCord - server specific IP forwarding
 })
 // CHECKSTYLE:ON
 public class BungeeServerInfo implements ServerInfo
@@ -52,6 +53,10 @@ public class BungeeServerInfo implements ServerInfo
     private final boolean restricted;
     @Getter
     private final Queue<DefinedPacket> packetQueue = new LinkedList<>();
+    // MikroCord start - server specific IP forwarding
+    @Getter
+    private final eu.mikroskeem.mikrocord.api.connection.ForwardingType ipForwardType;
+    // MikroCord end
 
     @Synchronized("players")
     public void addPlayer(ProxiedPlayer player)
diff --git a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
index 6f5f788bc8bad0e7b4d2411e3bbbae8fb03e1315..245366587b5bf47eb54acb9e1015773c3e8de8fc 100644
--- a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
+++ b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
@@ -101,7 +101,7 @@ public class ServerConnector extends PacketHandler implements eu.mikroskeem.mikr
         Handshake originalHandshake = user.getPendingConnection().getHandshake();
         Handshake copiedHandshake = new Handshake( originalHandshake.getProtocolVersion(), originalHandshake.getHost(), originalHandshake.getPort(), 2 );
 
-        if ( BungeeCord.getInstance().config.isIpForward() && user.getSocketAddress() instanceof InetSocketAddress )
+        if ( target.getIpForwardType().isBungeeCord() && user.getSocketAddress() instanceof InetSocketAddress ) // MikroCord - server specific IP forwarding
         {
             String newHost = copiedHandshake.getHost() + "\00" + user.getAddress().getHostString() + "\00" + user.getUUID();
 
@@ -170,7 +170,7 @@ public class ServerConnector extends PacketHandler implements eu.mikroskeem.mikr
         ch.setProtocol( Protocol.GAME );
         thisState = State.LOGIN;
         // MikroCord start - Implement Velocity modern forwarding support
-        if (bungee.getConfig().isVelocityForwardingSupport() && !modernInformationForwarded) {
+        if (target.getIpForwardType().isVelocity() && !modernInformationForwarded) {
             throw new QuietException("Your server did not send a forwarding request to the proxy. Is it set up correctly?");
         }
         // MikroCord end
@@ -457,7 +457,7 @@ public class ServerConnector extends PacketHandler implements eu.mikroskeem.mikr
     // MikroCord start - Implement Velocity modern forwarding support
     @Override
     public void handle(net.md_5.bungee.protocol.packet.LoginPayloadRequest request) {
-        if (bungee.getConfig().isVelocityForwardingSupport() && request.getChannel().equals(eu.mikroskeem.mikrocord.misc.VelocitySupport.MODERN_FORWARDING_CHANNEL_NAME)) {
+        if (target.getIpForwardType().isVelocity() && request.getChannel().equals(eu.mikroskeem.mikrocord.misc.VelocitySupport.MODERN_FORWARDING_CHANNEL_NAME)) {
             ByteBuf forwardingData = null;
             try {
                 // Create forwarding data
diff --git a/proxy/src/main/java/net/md_5/bungee/conf/Configuration.java b/proxy/src/main/java/net/md_5/bungee/conf/Configuration.java
index fd60b33e694e89ebf9957ee16d5d62d663989eb8..a5aaefc07d53a8e45c19490068c84bed78ea52b7 100644
--- a/proxy/src/main/java/net/md_5/bungee/conf/Configuration.java
+++ b/proxy/src/main/java/net/md_5/bungee/conf/Configuration.java
@@ -66,6 +66,7 @@ public abstract class Configuration implements ProxyConfig
     private int throttle = 4000;
     private int throttleLimit = 3;
     private boolean ipForward = true; // MikroCord - sane configuration defaults
+    private eu.mikroskeem.mikrocord.api.connection.ForwardingType ipForwardType = eu.mikroskeem.mikrocord.api.connection.ForwardingType.BUNGEECORD;
     private Favicon favicon;
     private int compressionThreshold = 256;
     private boolean preventProxyConnections;
@@ -101,7 +102,18 @@ public abstract class Configuration implements ProxyConfig
         remotePingTimeout = adapter.getInt( "remote_ping_timeout", remotePingTimeout );
         throttle = adapter.getInt( "connection_throttle", throttle );
         throttleLimit = adapter.getInt( "connection_throttle_limit", throttleLimit );
+        /* // MikroCord start - server specific IP forwarding
         ipForward = adapter.getBoolean( "ip_forward", ipForward );
+        */
+        Object ipForwardValue;
+        try {
+            ipForwardValue = adapter.getString("ip_forward", ipForwardType.name().toLowerCase(java.util.Locale.ROOT));
+        } catch (ClassCastException e) {
+            ipForwardValue = adapter.getBoolean("ip_forward", !ipForwardType.isOff());
+        }
+        ipForwardType = eu.mikroskeem.mikrocord.api.connection.ForwardingType.fromString(ipForwardValue.toString());
+        ipForward = !ipForwardType.isOff(); // Legacy
+        // MikroCord end
         compressionThreshold = adapter.getInt( "network_compression_threshold", compressionThreshold );
         preventProxyConnections = adapter.getBoolean( "prevent_proxy_connections", preventProxyConnections );
         forgeSupport = adapter.getBoolean( "forge_support", forgeSupport );
diff --git a/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java b/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java
index 908ceee5a92233c5790400ffd8a835bd4a5610cf..2d8490da87ff78f9fdcc2a3e2fa87382f4313742 100644
--- a/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java
+++ b/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java
@@ -230,8 +230,17 @@ public class YamlConfig implements ConfigurationAdapter
             String addr = get( "address", "localhost:25565", val );
             String motd = ChatColor.translateAlternateColorCodes( '&', get( "motd", "&1Just another Waterfall - Forced Host", val ) );
             boolean restricted = get( "restricted", false, val );
+            // MikroCord start - server specific IP forwarding
+            eu.mikroskeem.mikrocord.api.connection.ForwardingType ipForwardingType;
+            var ipForwardingTypeRaw = get("ip_forward", (Object) ProxyServer.getInstance().getConfig().getIpForwardType().name().toLowerCase(Locale.ROOT), val).toString();
+            try {
+                ipForwardingType = eu.mikroskeem.mikrocord.api.connection.ForwardingType.fromString(ipForwardingTypeRaw);
+            } catch (IllegalArgumentException e) {
+                throw new IllegalArgumentException("Invalid forwarding type: " + ipForwardingTypeRaw);
+            }
+            // MikroCord end
             SocketAddress address = Util.getAddr( addr );
-            ServerInfo info = ProxyServer.getInstance().constructServerInfo( name, address, motd, restricted );
+            ServerInfo info = ProxyServer.getInstance().constructServerInfo( name, address, motd, restricted, ipForwardingType ); // MikroCord - server specific IP forwarding
             ret.put( name, info );
         }
 
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
index a10081f800ab952a7490d9216d72b9a0543e5aca..842e01a31b2896b28612a88f3576491ab53f7fc8 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
@@ -139,7 +139,7 @@ public class DownstreamBridge extends PacketHandler
     @Override
     public void handle(PacketWrapper packet) throws Exception
     {
-        con.getEntityRewrite().rewriteClientbound( packet.buf, con.getServerEntityId(), con.getClientEntityId(), con.getPendingConnection().getVersion() );
+        con.getEntityRewrite().rewriteClientbound( packet.buf, con.getServerEntityId(), con.getClientEntityId(), con.getPendingConnection().getVersion(), con.getServer() ); // MikroCord - server specific IP forwarding
         con.sendPacket( packet );
     }
 
@@ -156,7 +156,7 @@ public class DownstreamBridge extends PacketHandler
     @Override
     public void handle(PlayerListItem playerList) throws Exception
     {
-        if (!this.bungee.getConfig().isAllowTablistRewrite() && con.getPendingConnection().isOnlineMode() && (this.bungee.getConfig().isVelocityForwardingSupport() || this.server.getInfo().isIpForward())) { con.getTabListHandler().onUpdate(playerList); return; } // MikroCord - don't rewrite tablist on online mode connections
+        if (!this.bungee.getConfig().isAllowTablistRewrite() && con.getPendingConnection().isOnlineMode() && !this.server.getInfo().getIpForwardType().isOff()) { con.getTabListHandler().onUpdate(playerList); return; } // MikroCord - don't rewrite tablist on online mode connections
         con.getTabListHandler().onUpdate( TabList.rewrite( playerList ) );
         throw CancelSendSignal.INSTANCE; // Always throw because of profile rewriting
     }
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java b/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
index 9c57a972befe345557aef2668ab4f5952ed3925c..cad42aec65138a2bb15c6d461383f120704359d7 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
@@ -118,7 +118,7 @@ public class UpstreamBridge extends PacketHandler
     {
         if ( con.getServer() != null )
         {
-            con.getEntityRewrite().rewriteServerbound( packet.buf, con.getClientEntityId(), con.getServerEntityId(), con.getPendingConnection().getVersion() );
+            con.getEntityRewrite().rewriteServerbound( packet.buf, con.getClientEntityId(), con.getServerEntityId(), con.getPendingConnection().getVersion(), con.getServer() ); // MikroCord - server specific IP forwarding
             con.getServer().getCh().write( packet );
         }
     }
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap.java
index e6afb98db1822d26d239bdfdfc9510fdb220f551..def55bffb0b257773e0b02d4be14f47e2178a4a4 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap.java
@@ -90,24 +90,28 @@ public abstract class EntityMap
         }
     }
 
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
         rewrite( packet, oldId, newId, serverboundInts, serverboundVarInts );
     }
 
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, int protocolVersion)
+    // MikroCord start - server specific IP forwarding
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, int protocolVersion, net.md_5.bungee.api.connection.Server server)
     {
-        rewriteServerbound( packet, oldId, newId );
+        rewriteServerbound( packet, oldId, newId, server );
+        // MikroCord end
     }
 
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
         rewrite( packet, oldId, newId, clientboundInts, clientboundVarInts );
     }
 
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, int protocolVersion)
+    // MikroCord start - server specific IP forwarding
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, int protocolVersion, net.md_5.bungee.api.connection.Server server)
     {
-        rewriteClientbound( packet, oldId, newId );
+        rewriteClientbound( packet, oldId, newId, server );
+        // MikroCord end
     }
 
     protected static void rewriteInt(ByteBuf packet, int oldId, int newId, int offset)
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_10.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_10.java
index 39efaf99063d3a9e8416f36b7c3fae7c5b3ec9f6..ce046151ceaaf0c8c653ee9accf6363e40ec6178 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_10.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_10.java
@@ -48,9 +48,9 @@ class EntityMap_1_10 extends EntityMap
 
     @Override
     @SuppressFBWarnings("DLS_DEAD_LOCAL_STORE")
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteClientbound( packet, oldId, newId );
+        super.rewriteClientbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
 
         // Special cases
         int readerIndex = packet.readerIndex();
@@ -155,15 +155,15 @@ class EntityMap_1_10 extends EntityMap
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteServerbound( packet, oldId, newId );
+        super.rewriteServerbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
         // Special cases
         int readerIndex = packet.readerIndex();
         int packetId = DefinedPacket.readVarInt( packet );
         int packetIdLength = packet.readerIndex() - readerIndex;
 
-        if ( packetId == 0x1B /* Spectate : PacketPlayInSpectate */ && !BungeeCord.getInstance().getConfig().isIpForward() )
+        if ( packetId == 0x1B /* Spectate : PacketPlayInSpectate */ && server.getInfo().getIpForwardType().isOff() ) // MikroCord - server specific IP forwarding
         {
             UUID uuid = DefinedPacket.readUUID( packet );
             ProxiedPlayer player;
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_11.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_11.java
index 6047fcb5f700533eb8d5ab101869e430c7c8ca47..6527216bd0d833fb08842b9550cd4c71168f51cf 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_11.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_11.java
@@ -48,9 +48,9 @@ class EntityMap_1_11 extends EntityMap
 
     @Override
     @SuppressFBWarnings("DLS_DEAD_LOCAL_STORE")
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteClientbound( packet, oldId, newId );
+        super.rewriteClientbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
 
         // Special cases
         int readerIndex = packet.readerIndex();
@@ -156,15 +156,15 @@ class EntityMap_1_11 extends EntityMap
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteServerbound( packet, oldId, newId );
+        super.rewriteServerbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
         // Special cases
         int readerIndex = packet.readerIndex();
         int packetId = DefinedPacket.readVarInt( packet );
         int packetIdLength = packet.readerIndex() - readerIndex;
 
-        if ( packetId == 0x1B /* Spectate : PacketPlayInSpectate */ && !BungeeCord.getInstance().getConfig().isIpForward() )
+        if ( packetId == 0x1B /* Spectate : PacketPlayInSpectate */ && server.getInfo().getIpForwardType().isOff() ) // MikroCord - server specific IP forwarding
         {
             UUID uuid = DefinedPacket.readUUID( packet );
             ProxiedPlayer player;
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_12.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_12.java
index 54221465920672ed09761131f5324c451a0bb1de..80d600c0e015a94460f749c9174edfb308804749 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_12.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_12.java
@@ -48,9 +48,9 @@ class EntityMap_1_12 extends EntityMap
 
     @Override
     @SuppressFBWarnings("DLS_DEAD_LOCAL_STORE")
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteClientbound( packet, oldId, newId );
+        super.rewriteClientbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
 
         // Special cases
         int readerIndex = packet.readerIndex();
@@ -156,15 +156,15 @@ class EntityMap_1_12 extends EntityMap
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteServerbound( packet, oldId, newId );
+        super.rewriteServerbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
         // Special cases
         int readerIndex = packet.readerIndex();
         int packetId = DefinedPacket.readVarInt( packet );
         int packetIdLength = packet.readerIndex() - readerIndex;
 
-        if ( packetId == 0x1E /* Spectate : PacketPlayInSpectate */ && !BungeeCord.getInstance().getConfig().isIpForward() )
+        if ( packetId == 0x1E /* Spectate : PacketPlayInSpectate */ && server.getInfo().getIpForwardType().isOff() ) // MikroCord - server specific IP forwarding
         {
             UUID uuid = DefinedPacket.readUUID( packet );
             ProxiedPlayer player;
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_12_1.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_12_1.java
index 75d651c579ea2f4503f55a7116bb723cadfe2385..db0ff8a250ce24efe530b177aaeb832d7f8cb94a 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_12_1.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_12_1.java
@@ -48,9 +48,9 @@ class EntityMap_1_12_1 extends EntityMap
 
     @Override
     @SuppressFBWarnings("DLS_DEAD_LOCAL_STORE")
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteClientbound( packet, oldId, newId );
+        super.rewriteClientbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
 
         // Special cases
         int readerIndex = packet.readerIndex();
@@ -156,15 +156,15 @@ class EntityMap_1_12_1 extends EntityMap
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteServerbound( packet, oldId, newId );
+        super.rewriteServerbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
         // Special cases
         int readerIndex = packet.readerIndex();
         int packetId = DefinedPacket.readVarInt( packet );
         int packetIdLength = packet.readerIndex() - readerIndex;
 
-        if ( packetId == 0x1E /* Spectate : PacketPlayInSpectate */ && !BungeeCord.getInstance().getConfig().isIpForward() )
+        if ( packetId == 0x1E /* Spectate : PacketPlayInSpectate */ && server.getInfo().getIpForwardType().isOff() ) // MikroCord - server specific IP forwarding
         {
             UUID uuid = DefinedPacket.readUUID( packet );
             ProxiedPlayer player;
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_13.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_13.java
index d737fe2517692d3e68976595d1bc4da4cd883a19..3056a12d406026903615de1490f01315f08c22cc 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_13.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_13.java
@@ -48,9 +48,9 @@ class EntityMap_1_13 extends EntityMap
 
     @Override
     @SuppressFBWarnings("DLS_DEAD_LOCAL_STORE")
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, int protocolVersion)
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, int protocolVersion, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteClientbound( packet, oldId, newId );
+        super.rewriteClientbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
 
         // Special cases
         int readerIndex = packet.readerIndex();
@@ -156,15 +156,15 @@ class EntityMap_1_13 extends EntityMap
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteServerbound( packet, oldId, newId );
+        super.rewriteServerbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
         // Special cases
         int readerIndex = packet.readerIndex();
         int packetId = DefinedPacket.readVarInt( packet );
         int packetIdLength = packet.readerIndex() - readerIndex;
 
-        if ( packetId == 0x28 /* Spectate : PacketPlayInSpectate */ && !BungeeCord.getInstance().getConfig().isIpForward() )
+        if ( packetId == 0x28 /* Spectate : PacketPlayInSpectate */ && server.getInfo().getIpForwardType().isOff() ) // MikroCord - server specific IP forwarding
         {
             UUID uuid = DefinedPacket.readUUID( packet );
             ProxiedPlayer player;
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_14.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_14.java
index e9702b16f63eb4765954d620b8b3f19942e38594..d442ab9140fd8623552e6d1c07d4386db6a8c3b9 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_14.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_14.java
@@ -47,9 +47,9 @@ class EntityMap_1_14 extends EntityMap
 
     @Override
     @SuppressFBWarnings("DLS_DEAD_LOCAL_STORE")
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, int protocolVersion)
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, int protocolVersion, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteClientbound( packet, oldId, newId );
+        super.rewriteClientbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
 
         // Special cases
         int readerIndex = packet.readerIndex();
@@ -160,15 +160,15 @@ class EntityMap_1_14 extends EntityMap
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteServerbound( packet, oldId, newId );
+        super.rewriteServerbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
         // Special cases
         int readerIndex = packet.readerIndex();
         int packetId = DefinedPacket.readVarInt( packet );
         int packetIdLength = packet.readerIndex() - readerIndex;
 
-        if ( packetId == 0x2B /* Spectate : PacketPlayInSpectate */ && !BungeeCord.getInstance().getConfig().isIpForward() )
+        if ( packetId == 0x2B /* Spectate : PacketPlayInSpectate */ && server.getInfo().getIpForwardType().isOff() ) // MikroCord - server specific IP forwarding
         {
             UUID uuid = DefinedPacket.readUUID( packet );
             ProxiedPlayer player;
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_15.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_15.java
index ea9e5ec9dff144ff853e5aaca997a3b85273c22f..ae65abde5e717a9be4f5c2c6472b30a19f0679a3 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_15.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_15.java
@@ -47,9 +47,9 @@ class EntityMap_1_15 extends EntityMap
 
     @Override
     @SuppressFBWarnings("DLS_DEAD_LOCAL_STORE")
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, int protocolVersion)
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, int protocolVersion, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteClientbound( packet, oldId, newId );
+        super.rewriteClientbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
 
         // Special cases
         int readerIndex = packet.readerIndex();
@@ -160,9 +160,9 @@ class EntityMap_1_15 extends EntityMap
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteServerbound( packet, oldId, newId );
+        super.rewriteServerbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
         // Special cases
         int readerIndex = packet.readerIndex();
         int packetId = DefinedPacket.readVarInt( packet );
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_8.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_8.java
index 8e2dbe69929a67af592eb6aebb8049e8cb8e6171..f87213e25464f7e13204f38cb31b92ea57d93590 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_8.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_8.java
@@ -49,9 +49,9 @@ class EntityMap_1_8 extends EntityMap
 
     @Override
     @SuppressFBWarnings("DLS_DEAD_LOCAL_STORE")
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteClientbound( packet, oldId, newId );
+        super.rewriteClientbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
 
         //Special cases
         int readerIndex = packet.readerIndex();
@@ -150,15 +150,15 @@ class EntityMap_1_8 extends EntityMap
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteServerbound( packet, oldId, newId );
+        super.rewriteServerbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
         //Special cases
         int readerIndex = packet.readerIndex();
         int packetId = DefinedPacket.readVarInt( packet );
         int packetIdLength = packet.readerIndex() - readerIndex;
 
-        if ( packetId == 0x18 /* Spectate */ && !BungeeCord.getInstance().getConfig().isIpForward() )
+        if ( packetId == 0x18 /* Spectate */ && server.getInfo().getIpForwardType().isOff() ) // MikroCord - server specific IP forwarding
         {
             UUID uuid = DefinedPacket.readUUID( packet );
             ProxiedPlayer player;
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_9.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_9.java
index a4d0ea3f92dcb6a4a4a216d32eb60bc0a8a325cc..7eac3a12c657390ef2c79a8f8d19661cf138ee7d 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_9.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_9.java
@@ -48,9 +48,9 @@ class EntityMap_1_9 extends EntityMap
 
     @Override
     @SuppressFBWarnings("DLS_DEAD_LOCAL_STORE")
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteClientbound( packet, oldId, newId );
+        super.rewriteClientbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
 
         // Special cases
         int readerIndex = packet.readerIndex();
@@ -155,15 +155,15 @@ class EntityMap_1_9 extends EntityMap
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteServerbound( packet, oldId, newId );
+        super.rewriteServerbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
         // Special cases
         int readerIndex = packet.readerIndex();
         int packetId = DefinedPacket.readVarInt( packet );
         int packetIdLength = packet.readerIndex() - readerIndex;
 
-        if ( packetId == 0x1B /* Spectate : PacketPlayInSpectate */ && !BungeeCord.getInstance().getConfig().isIpForward() )
+        if ( packetId == 0x1B /* Spectate : PacketPlayInSpectate */ && server.getInfo().getIpForwardType().isOff() ) // MikroCord - server specific IP forwarding
         {
             UUID uuid = DefinedPacket.readUUID( packet );
             ProxiedPlayer player;
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_9_4.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_9_4.java
index ae7ff10e5cde31c0b01fc581d46c9eee5a2c433b..1ff37813c395a888067d1238d5d03a4779933a64 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_9_4.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_1_9_4.java
@@ -48,9 +48,9 @@ class EntityMap_1_9_4 extends EntityMap
 
     @Override
     @SuppressFBWarnings("DLS_DEAD_LOCAL_STORE")
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteClientbound( packet, oldId, newId );
+        super.rewriteClientbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
 
         // Special cases
         int readerIndex = packet.readerIndex();
@@ -155,15 +155,15 @@ class EntityMap_1_9_4 extends EntityMap
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId)
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) // MikroCord - server specific IP forwarding
     {
-        super.rewriteServerbound( packet, oldId, newId );
+        super.rewriteServerbound( packet, oldId, newId, server ); // MikroCord - server specific IP forwarding
         // Special cases
         int readerIndex = packet.readerIndex();
         int packetId = DefinedPacket.readVarInt( packet );
         int packetIdLength = packet.readerIndex() - readerIndex;
 
-        if ( packetId == 0x1B /* Spectate : PacketPlayInSpectate */ && !BungeeCord.getInstance().getConfig().isIpForward() )
+        if ( packetId == 0x1B /* Spectate : PacketPlayInSpectate */ && server.getInfo().getIpForwardType().isOff() ) // MikroCord - server specific IP forwarding
         {
             UUID uuid = DefinedPacket.readUUID( packet );
             ProxiedPlayer player;
diff --git a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_Dummy.java b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_Dummy.java
index cb81d1dd8f361c1845cace634c7bd22a9e6413b3..5fe5dca16ec74d0a5337e8d89f9626a66124649c 100644
--- a/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_Dummy.java
+++ b/proxy/src/main/java/net/md_5/bungee/entitymap/EntityMap_Dummy.java
@@ -12,19 +12,19 @@ public class EntityMap_Dummy extends EntityMap {
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId) {
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) { // MikroCord - server specific IP forwarding
     }
 
     @Override
-    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, int protocolVersion) {
+    public void rewriteServerbound(ByteBuf packet, int oldId, int newId, int protocolVersion, net.md_5.bungee.api.connection.Server server) { // MikroCord - server specific IP forwarding
     }
 
     @Override
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId) {
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, net.md_5.bungee.api.connection.Server server) { // MikroCord - server specific IP forwarding
     }
 
     @Override
-    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, int protocolVersion) {
+    public void rewriteClientbound(ByteBuf packet, int oldId, int newId, int protocolVersion, net.md_5.bungee.api.connection.Server server) { // MikroCord - server specific IP forwarding
     }
 }
 // Waterfall end
\ No newline at end of file
