From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Sun, 14 Apr 2019 18:38:49 +0300
Subject: [PATCH] Implement part of SpigotMC/BungeeCord#1744


diff --git a/api/src/main/java/eu/mikroskeem/mikrocord/api/command/CommandExecutionException.java b/api/src/main/java/eu/mikroskeem/mikrocord/api/command/CommandExecutionException.java
new file mode 100644
index 0000000000000000000000000000000000000000..cb68a209276ad6c00c1a90085bb9e57a6149c904
--- /dev/null
+++ b/api/src/main/java/eu/mikroskeem/mikrocord/api/command/CommandExecutionException.java
@@ -0,0 +1,43 @@
+package eu.mikroskeem.mikrocord.api.command;
+
+import lombok.Getter;
+import lombok.NonNull;
+import lombok.RequiredArgsConstructor;
+import net.md_5.bungee.api.CommandSender;
+import net.md_5.bungee.api.plugin.Command;
+
+/**
+ * @author Mark Vainomaa
+ */
+@Getter
+public class CommandExecutionException extends RuntimeException {
+    private transient final CommandExecutionContext commandExecutionContext;
+
+    public CommandExecutionException(@NonNull CommandExecutionContext commandExecutionContext, Throwable cause) {
+        super(cause);
+        this.commandExecutionContext = commandExecutionContext;
+    }
+
+    @Getter
+    @RequiredArgsConstructor
+    public static class CommandExecutionContext {
+        /**
+         * Command sender
+         */
+        private final CommandSender sender;
+
+        /**
+         * Command name
+         */
+        private final String commandName;
+        /**
+         * Command arguments
+         */
+        private final String[] commandArgs;
+
+        /**
+         * Found command instance
+         */
+        private final Command command;
+    }
+}
diff --git a/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java b/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java
index ab98f2fba375f343aa9f2733d1a0a36a38a257ce..0f3fc6721944c05ad6a3fad775aac0b0bd321c49 100644
--- a/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java
+++ b/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java
@@ -155,6 +155,23 @@ public class PluginManager
      * @return whether the command was handled
      */
     public boolean dispatchCommand(CommandSender sender, String commandLine, List<String> tabResults)
+    // MikroCord start - Import SpigotMC/BungeeCord#1744
+    {
+        return dispatchCommand(sender, commandLine, tabResults, false);
+    }
+
+    /**
+     * Execute a command if it is registered, else return false.
+     *
+     * @param sender the sender executing the command
+     * @param commandLine the complete command line including command name and
+     * arguments
+     * @param tabResults the List for tab results to be added to, or null if executing the command
+     * @param throwOnFailure whether or not to throw an {@link eu.mikroskeem.mikrocord.api.command.CommandExecutionException} if the command executed throws an exception
+     * @return whether the command was handled
+     */
+    public boolean dispatchCommand(CommandSender sender, String commandLine, List<String> tabResults, boolean throwOnFailure)
+    // MikroCord end
     {
         String[] split = commandLine.split( " ", -1 );
         // Check for chat that only contains " "
@@ -202,6 +219,17 @@ public class PluginManager
         {
             sender.sendMessage( ChatColor.RED + "An internal error occurred whilst executing this command, please check the console log for details." );
             ProxyServer.getInstance().getLogger().log( Level.WARNING, "Error in dispatching command", ex );
+            // MikroCord start - Import SpigotMC/BungeeCord#1744
+            if (throwOnFailure) {
+                var executionContext = new eu.mikroskeem.mikrocord.api.command.CommandExecutionException.CommandExecutionContext(
+                        sender,
+                        split[0],
+                        args,
+                        command
+                );
+                throw new eu.mikroskeem.mikrocord.api.command.CommandExecutionException(executionContext, ex);
+            }
+            // MikroCord end
         }
         return true;
     }
