From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Wed, 29 May 2019 20:16:16 +0300
Subject: [PATCH] Improve event loop group implementation picking


diff --git a/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java b/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
index 49cc56f32f1c12d98338847165debc3565d122f7..3c08a652fe46613b7cff056ce54f71c54583b3d6 100644
--- a/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
+++ b/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
@@ -1,12 +1,14 @@
 package eu.mikroskeem.mikrocord.conf;
 
 import com.google.common.collect.ImmutableList;
+import eu.mikroskeem.mikrocord.misc.EventLoopGroupType;
 import eu.mikroskeem.mikrocord.misc.TCPFastOpenMode;
 import eu.mikroskeem.mikrocord.misc.VelocitySupport;
 import io.github.waterfallmc.waterfall.conf.WaterfallConfiguration;
 import lombok.Getter;
 import net.md_5.bungee.api.ProxyServer;
 import net.md_5.bungee.api.config.ConfigurationAdapter;
+import net.md_5.bungee.netty.PipelineUtils;
 
 import java.nio.charset.StandardCharsets;
 import java.util.HashSet;
@@ -59,7 +61,9 @@ public class MikroCordConfiguration extends WaterfallConfiguration {
 
     private int setupTfo(int value) {
         TCPFastOpenMode actual = TCPFastOpenMode.fromValue(value);
-        ProxyServer.getInstance().getLogger().log(Level.INFO, "TCP fast open mode is set to {0}", actual.name());
+        if (PipelineUtils.getEventLoopGroupType() == EventLoopGroupType.EPOLL) {
+            ProxyServer.getInstance().getLogger().log(Level.INFO, "TCP fast open mode is set to {0}", actual.name());
+        }
         return actual.value;
     }
 }
diff --git a/proxy/src/main/java/eu/mikroskeem/mikrocord/misc/EventLoopGroupType.java b/proxy/src/main/java/eu/mikroskeem/mikrocord/misc/EventLoopGroupType.java
new file mode 100644
index 0000000000000000000000000000000000000000..5afba538d8f61f8f526d15295322d12c1224cc68
--- /dev/null
+++ b/proxy/src/main/java/eu/mikroskeem/mikrocord/misc/EventLoopGroupType.java
@@ -0,0 +1,9 @@
+package eu.mikroskeem.mikrocord.misc;
+
+/**
+ * @author Mark Vainomaa
+ */
+public enum EventLoopGroupType {
+    EPOLL,
+    NIO
+}
diff --git a/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java b/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java
index 44226e67f822722fb6aed7e2b1a2525054e2af9e..65bca81925e2f7652d6af4519c90207d22184878 100644
--- a/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java
+++ b/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java
@@ -92,12 +92,16 @@ public class PipelineUtils
     public static final String LEGACY_KICKER = "legacy-kick";
 
     private static boolean epoll;
+    // MikroCord start - Improve event loop group implementation picking
+    private static eu.mikroskeem.mikrocord.misc.EventLoopGroupType eventLoopGroupType;
+    public static eu.mikroskeem.mikrocord.misc.EventLoopGroupType getEventLoopGroupType() { return eventLoopGroupType; }
+    // MikroCord end
 
     static
     {
-        if ( !PlatformDependent.isWindows() && Boolean.parseBoolean( System.getProperty( "bungee.epoll", "true" ) ) )
+        if ( !PlatformDependent.isWindows() && !PlatformDependent.isOsx() && Boolean.parseBoolean( System.getProperty( "bungee.epoll", "true" ) ) ) // MikroCord - Improve event loop group implementation picking
         {
-            ProxyServer.getInstance().getLogger().info( "Not on Windows, attempting to use enhanced EpollEventLoop" );
+            ProxyServer.getInstance().getLogger().info("Attempting to use enhanced EpollEventLoop"); //"Not on Windows, attempting to use enhanced EpollEventLoop" ); // MikroCord start - Improve event loop group implementation picking
 
             if ( epoll = Epoll.isAvailable() )
             {
@@ -107,6 +111,7 @@ public class PipelineUtils
                 ProxyServer.getInstance().getLogger().log( Level.WARNING, "Epoll is not working, falling back to NIO: {0}", Util.exception( Epoll.unavailabilityCause() ) );
             }
         }
+        eventLoopGroupType = epoll ? eu.mikroskeem.mikrocord.misc.EventLoopGroupType.EPOLL : eu.mikroskeem.mikrocord.misc.EventLoopGroupType.NIO;
     }
 
     public static EventLoopGroup newEventLoopGroup(int threads, ThreadFactory factory)
