From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Thu, 15 Aug 2019 17:26:50 +0300
Subject: [PATCH] Add option to disable noisy packet decode exception


diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
index 980d87fc33c781825966b01ea942c9d2e2230a38..0567132ea34c665b0a56605f49504188b0735947 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
@@ -276,4 +276,7 @@ public interface ProxyConfig
     // MikroCord start - allow Query response plugins populationg
     boolean isPopulateGS4QueryPlugins();
     // MikroCord end
+    // MikroCord start - add option to disable noisy packet decode exception
+    boolean isLogNoisyPacketDecodeException();
+    // MikroCord end
 }
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/MinecraftDecoder.java b/protocol/src/main/java/net/md_5/bungee/protocol/MinecraftDecoder.java
index 71ddf022ae310beff40ef4d0e64bcc5d71a613e6..393a23789286ac3c22c1f7790de3ab8f4b7dac06 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/MinecraftDecoder.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/MinecraftDecoder.java
@@ -20,11 +20,16 @@ public class MinecraftDecoder extends MessageToMessageDecoder<ByteBuf>
     private int protocolVersion;
     @Setter
     private boolean supportsForge = false;
+    // MikroCord start - add option to disable noisy packet decode exception
+    @Setter private static java.util.function.BooleanSupplier noisyPacketDecodeExceptionSupplier;
+    private final boolean noisyPacketDecodeException;
+    // MikroCord end
 
     public MinecraftDecoder(Protocol protocol, boolean server, int protocolVersion) {
         this.protocol = protocol;
         this.server = server;
         this.protocolVersion = protocolVersion;
+        this.noisyPacketDecodeException = noisyPacketDecodeExceptionSupplier.getAsBoolean(); // MikroCord - add option to disable noisy packet decode exception
     }
 
     @Override
@@ -71,7 +76,16 @@ public class MinecraftDecoder extends MessageToMessageDecoder<ByteBuf>
             } else {
                 packetTypeStr = "unknown";
             }
+            /* // MikroCord start - add option to disable noisy packet decode exception
             throw new DecoderException("Error decoding packet " + packetTypeStr + " with contents:\n" + ByteBufUtil.prettyHexDump(slice), e);
+            */
+            DecoderException de = new DecoderException("Error decoding packet " + packetTypeStr + " with contents:\n" + ByteBufUtil.prettyHexDump(slice), e);
+            if (!this.noisyPacketDecodeException) {
+                de.setStackTrace(new StackTraceElement[0]);
+                de.getCause().setStackTrace(new StackTraceElement[0]);
+            }
+            throw de;
+            // MikroCord end
         } finally
         {
             if ( slice != null )
diff --git a/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java b/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
index 53ada5c826ec039c8e48632fc2a2c834ff941013..20b4d23535f4f29d75de23a0bf519c3c29db460e 100644
--- a/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
+++ b/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
@@ -10,6 +10,7 @@ import net.md_5.bungee.BungeeCord;
 import net.md_5.bungee.api.ProxyServer;
 import net.md_5.bungee.api.config.ConfigurationAdapter;
 import net.md_5.bungee.netty.PipelineUtils;
+import net.md_5.bungee.protocol.MinecraftDecoder;
 
 import java.nio.charset.StandardCharsets;
 import java.util.HashSet;
@@ -20,6 +21,11 @@ import java.util.logging.Level;
  * @author Mark Vainomaa
  */
 public class MikroCordConfiguration extends WaterfallConfiguration {
+    public MikroCordConfiguration() {
+        // Set up accessors
+        MinecraftDecoder.setNoisyPacketDecodeExceptionSupplier(this::isLogNoisyPacketDecodeException);
+    }
+
     @Getter
     private String restartMessage = "Proxy is restarting";
 
@@ -56,6 +62,9 @@ public class MikroCordConfiguration extends WaterfallConfiguration {
     @Getter
     private boolean populateGS4QueryPlugins = false;
 
+    @Getter
+    private boolean logNoisyPacketDecodeException = false;
+
     @Override
     public void load() {
         super.load();
@@ -74,6 +83,7 @@ public class MikroCordConfiguration extends WaterfallConfiguration {
         allowTablistRewrite = config.getBoolean("performance.allow_tablist_rewrite", allowTablistRewrite);
         internScoreboardTeamStrings = config.getBoolean("performance.intern_scoreboard_team_strings", internScoreboardTeamStrings);
         populateGS4QueryPlugins = config.getBoolean("query.populate_plugins", populateGS4QueryPlugins);
+        logNoisyPacketDecodeException = config.getBoolean("log.noisy_packet_decode_exception", logNoisyPacketDecodeException);
     }
 
     private int setupTfo(int value) {
