From 52fa915e87b8a91ada97a7058ae4ca6cae211612 Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Sun, 28 Jul 2019 20:56:36 +0300
Subject: [PATCH] PaperMC/Waterfall#394 fix


diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
index 35b72a4b..6b5b5043 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
@@ -280,4 +280,7 @@ public interface ProxyConfig
     // MikroCord start - allow Query response plugins populationg
     boolean isPopulateGS4QueryPlugins();
     // MikroCord end
+    // MikroCord start - PaperMC/Waterfall#394 fix
+    boolean isUseLowMemorySetInScoreboard();
+    // MikroCord end
 }
diff --git a/api/src/main/java/net/md_5/bungee/api/score/Team.java b/api/src/main/java/net/md_5/bungee/api/score/Team.java
index 7c0bef5d..864a0801 100644
--- a/api/src/main/java/net/md_5/bungee/api/score/Team.java
+++ b/api/src/main/java/net/md_5/bungee/api/score/Team.java
@@ -21,7 +21,7 @@ public class Team
     private NametagVisibility nameTagVisibility; // MikroCord - save memory on scoreboard teams
     private CollisionRule collisionRule; // MikroCord - save memory on scoreboard teams
     private int color;
-    private Set<String> players = LowMemorySet.create();
+    private Set<String> players = net.md_5.bungee.api.ProxyServer.getInstance().getConfig().isUseLowMemorySetInScoreboard() ? LowMemorySet.create() : new java.util.HashSet<>(); // MikroCord - PaperMC/Waterfall#394 fix
 
     public Collection<String> getPlayers()
     {
diff --git a/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java b/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
index e6a7d92b..aab4a14d 100644
--- a/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
+++ b/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
@@ -53,6 +53,9 @@ public class MikroCordConfiguration extends WaterfallConfiguration {
     @Getter
     private boolean populateGS4QueryPlugins = false;
 
+    @Getter
+    private boolean useLowMemorySetInScoreboard = false;
+
     @Override
     public void load() {
         super.load();
@@ -69,6 +72,7 @@ public class MikroCordConfiguration extends WaterfallConfiguration {
         tcpFastOpenMode = setupTfo(config.getInt("networking.tcp_fast_open.mode", tcpFastOpenMode));
         allowTablistRewrite = config.getBoolean("performance.allow_tablist_rewrite", allowTablistRewrite);
         internScoreboardTeamStrings = config.getBoolean("performance.intern_scoreboard_team_strings", internScoreboardTeamStrings);
+        useLowMemorySetInScoreboard = config.getBoolean("performance.use_lms_in_scoreboard", useLowMemorySetInScoreboard);
         populateGS4QueryPlugins = config.getBoolean("query.populate_plugins", populateGS4QueryPlugins);
     }
 
-- 
2.22.0

