From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Sat, 20 Jul 2019 16:49:01 +0300
Subject: [PATCH] Allow Query response plugins population


diff --git a/api/src/main/java/eu/mikroskeem/firefly/api/config/FireflyProxyConfig.java b/api/src/main/java/eu/mikroskeem/firefly/api/config/FireflyProxyConfig.java
index 4216d9dfb8963577f10e1a3a601f9b3387ebc862..d6eba7208ce9063df112215150a1e42f7274d35f 100644
--- a/api/src/main/java/eu/mikroskeem/firefly/api/config/FireflyProxyConfig.java
+++ b/api/src/main/java/eu/mikroskeem/firefly/api/config/FireflyProxyConfig.java
@@ -69,4 +69,9 @@ public interface FireflyProxyConfig {
      * @return Whether scoreboard team strings should be interned or not
      */
     boolean isInternScoreboardTeamStrings();
+
+    /**
+     * @return Whether plugins list should be populated in GS4 query response or not
+     */
+    boolean isPopulateGS4QueryPlugins();
 }
diff --git a/api/src/main/java/io/github/waterfallmc/waterfall/QueryResult.java b/api/src/main/java/io/github/waterfallmc/waterfall/QueryResult.java
index 9a262c8a11caeade95a084e5e5bc0be398917bbf..172006d3ec5a071a39fcee55a7e893a75603e9b4 100644
--- a/api/src/main/java/io/github/waterfallmc/waterfall/QueryResult.java
+++ b/api/src/main/java/io/github/waterfallmc/waterfall/QueryResult.java
@@ -56,4 +56,15 @@ public class QueryResult {
      */
     @NonNull
     private String version;
+    // Firefly start - allow Query response plugins population
+    private final List<PluginInfo> plugins = new java.util.LinkedList<>();
+    @Data
+    public static final class PluginInfo {
+        @NonNull
+        private final String name;
+
+        @NonNull
+        private final String version;
+    }
+    // Firefly end
 }
diff --git a/proxy/src/main/java/eu/mikroskeem/firefly/conf/FireflyConfiguration.java b/proxy/src/main/java/eu/mikroskeem/firefly/conf/FireflyConfiguration.java
index a654bcec0681b8063119f1c9e3a8e8be394e44c7..6be14f7699ff4254ba6e7b66fd20f27b2304be41 100644
--- a/proxy/src/main/java/eu/mikroskeem/firefly/conf/FireflyConfiguration.java
+++ b/proxy/src/main/java/eu/mikroskeem/firefly/conf/FireflyConfiguration.java
@@ -52,6 +52,9 @@ public class FireflyConfiguration extends WaterfallConfiguration {
     @Getter
     private boolean internScoreboardTeamStrings = false;
 
+    @Getter
+    private boolean populateGS4QueryPlugins = false;
+
     @Override
     public void load() {
         super.load();
@@ -69,6 +72,7 @@ public class FireflyConfiguration extends WaterfallConfiguration {
         waitForAllPlayersToDisconnectInfinitely = config.getBoolean("shutdown.wait_for_all_players_to_disconnect_infinitely", waitForAllPlayersToDisconnectInfinitely);
         allowTablistRewrite = config.getBoolean("performance.allow_tablist_rewrite", allowTablistRewrite);
         internScoreboardTeamStrings = config.getBoolean("performance.intern_scoreboard_team_strings", internScoreboardTeamStrings);
+        populateGS4QueryPlugins = config.getBoolean("query.populate_plugins", populateGS4QueryPlugins);
     }
 
     private TCPFastOpenMode setupTfo(int value) {
diff --git a/query/src/main/java/net/md_5/bungee/query/QueryHandler.java b/query/src/main/java/net/md_5/bungee/query/QueryHandler.java
index edcaa76a2d3e2cb82b3effdc16c030aaf6b395c4..1fe520b31a58483b6aae920458d3cb968b25e6b1 100644
--- a/query/src/main/java/net/md_5/bungee/query/QueryHandler.java
+++ b/query/src/main/java/net/md_5/bungee/query/QueryHandler.java
@@ -34,6 +34,7 @@ public class QueryHandler extends SimpleChannelInboundHandler<DatagramPacket>
     private final Cache<InetAddress, QuerySession> sessions = CacheBuilder.newBuilder().expireAfterWrite( 30, TimeUnit.SECONDS ).build();
     private static io.github.waterfallmc.waterfall.utils.FastException cachedNoSessionException = new io.github.waterfallmc.waterfall.utils.FastException("No Session!");
     private final Cache<InetAddress, Integer> blacklistedAddresses = CacheBuilder.newBuilder().maximumSize(1024).expireAfterWrite( 120, TimeUnit.SECONDS ).build(); // Firefly - Blacklist invalid query packet spammers
+    private volatile List<QueryResult.PluginInfo> cachedPluginInfoList = null; // Firefly - allow Query response plugins population
 
     private void writeShort(ByteBuf buf, int s)
     {
@@ -121,12 +122,28 @@ public class QueryHandler extends SimpleChannelInboundHandler<DatagramPacket>
                 throw cachedNoSessionException; // Waterfall
             }
 
+            // Firefly start - allow Query response plugins population
+            List<QueryResult.PluginInfo> plugins = this.cachedPluginInfoList;
+            if (plugins == null) {
+                synchronized (this) {
+                    if (this.cachedPluginInfoList == null) {
+                        this.cachedPluginInfoList = plugins = bungee.getConfig().isPopulateGS4QueryPlugins() ? bungee.getPluginManager().getPlugins()
+                                .stream()
+                                .map(p -> p.getDescription()) // No it cannot be converted, it's going to be uglier here.
+                                .map(p -> new QueryResult.PluginInfo(p.getName(), p.getVersion()))
+                                .collect(Collectors.toList())
+                                : java.util.Collections.emptyList();
+                    }
+                }
+            }
+            // Firefly end
             // Waterfall start
             List<String> players = bungee.getPlayers().stream().map(ProxiedPlayer::getName).collect(Collectors.toList());
 
             ProxyQueryEvent event = new ProxyQueryEvent(listener, new QueryResult(listener.getMotd(), "SMP", "Firefly_Proxy",
                     bungee.getOnlineCount(), listener.getMaxPlayers(), listener.getHost().getPort(),
                     listener.getHost().getHostString(), "MINECRAFT",  players, bungee.getGameVersion()));
+            event.getResult().getPlugins().addAll(plugins); // Firefly - allow Query response plugins population
             QueryResult result = bungee.getPluginManager().callEvent(event).getResult();
             // Waterfall end
 
@@ -160,7 +177,25 @@ public class QueryHandler extends SimpleChannelInboundHandler<DatagramPacket>
                 // Start Extra Info
                 data.put( "game_id", result.getGameId() );
                 data.put( "version", result.getVersion() );
+                /* Firefly start - allow Query response plugins population
                 data.put( "plugins", "" ); // TODO: Allow population?
+                 */
+                StringBuilder pluginsString = new StringBuilder();
+                pluginsString.append(bungee.getName()).append(' ').append(bungee.getGameVersion());
+                if (!plugins.isEmpty()) {
+                    pluginsString.append(':').append(' ');
+                    java.util.Iterator<QueryResult.PluginInfo> iterator = plugins.iterator();
+                    while (iterator.hasNext()) {
+                        QueryResult.PluginInfo info = iterator.next();
+                        pluginsString.append(info.getName());
+                        pluginsString.append(' ').append(info.getVersion());
+                        if (iterator.hasNext()) {
+                            pluginsString.append(';').append(' ');
+                        }
+                    }
+                }
+                data.put("plugins", pluginsString.toString());
+                // Firefly end
                 // End Extra Info
                 data.put( "map", result.getWorldName() );
                 data.put( "numplayers", Integer.toString( result.getOnlinePlayers() ) );
