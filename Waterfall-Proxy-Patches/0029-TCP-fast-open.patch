From d66a54769c753658f7da4e82ddde3a5acbfe06cc Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Wed, 29 May 2019 20:02:24 +0300
Subject: [PATCH] TCP fast open


diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
index d1b206a6..c69475ed 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
@@ -267,4 +267,8 @@ public interface ProxyConfig
     boolean isVelocityForwardingSupport();
     byte[] getVelocityForwardingSecret();
     // MikroCord end
+    // MikroCord start - TCP fast open
+    boolean isTcpFastOpenEnabled();
+    int getTcpFastOpenMode();
+    // MikroCord end
 }
diff --git a/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java b/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
index 6ad918fd..151cdce4 100644
--- a/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
+++ b/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
@@ -1,9 +1,11 @@
 package eu.mikroskeem.mikrocord.conf;
 
 import com.google.common.collect.ImmutableSet;
+import eu.mikroskeem.mikrocord.misc.TCPFastOpenMode;
 import eu.mikroskeem.mikrocord.misc.VelocitySupport;
 import io.github.waterfallmc.waterfall.conf.WaterfallConfiguration;
 import lombok.Getter;
+import net.md_5.bungee.BungeeCord;
 import net.md_5.bungee.api.ProxyServer;
 import net.md_5.bungee.api.config.ConfigurationAdapter;
 
@@ -11,6 +13,7 @@ import java.nio.charset.StandardCharsets;
 import java.util.Collection;
 import java.util.HashSet;
 import java.util.Set;
+import java.util.logging.Level;
 
 /**
  * @author Mark Vainomaa
@@ -34,6 +37,12 @@ public class MikroCordConfiguration extends WaterfallConfiguration {
     @Getter
     private byte[] velocityForwardingSecret;
 
+    @Getter
+    private boolean tcpFastOpenEnabled;
+
+    @Getter
+    private int tcpFastOpenMode;
+
     @Override
     public void load() {
         super.load();
@@ -46,5 +55,14 @@ public class MikroCordConfiguration extends WaterfallConfiguration {
         logInvalidQueryPackets = config.getBoolean("log.invalid_query_packets", logInvalidQueryPackets);
         velocityForwardingSupport = config.getBoolean("velocity_modern_forwarding.enabled", false);
         velocityForwardingSecret = config.getString("velocity_modern_forwarding.secret", () -> VelocitySupport.generateRandomString(12)).getBytes(StandardCharsets.UTF_8);
+        tcpFastOpenEnabled = config.getBoolean("networking.tcp_fast_open.enabled", true);
+        tcpFastOpenMode = setupTfo(config.getInt("networking.tcp_fast_open.mode", TCPFastOpenMode.CLIENT_ONLY.value));
+
+    }
+
+    private int setupTfo(int value) {
+        TCPFastOpenMode actual = TCPFastOpenMode.fromValue(value);
+        BungeeCord.getInstance().getLogger().log(Level.INFO, "TCP fast open mode is set to {0}", actual.name());
+        return actual.value;
     }
 }
diff --git a/proxy/src/main/java/eu/mikroskeem/mikrocord/misc/TCPFastOpenMode.java b/proxy/src/main/java/eu/mikroskeem/mikrocord/misc/TCPFastOpenMode.java
new file mode 100644
index 00000000..b52478f5
--- /dev/null
+++ b/proxy/src/main/java/eu/mikroskeem/mikrocord/misc/TCPFastOpenMode.java
@@ -0,0 +1,29 @@
+package eu.mikroskeem.mikrocord.misc;
+
+/**
+ * See https://en.wikipedia.org/wiki/TCP_Fast_Open
+ *
+ * @author Mark Vainomaa
+ */
+public enum TCPFastOpenMode {
+    DISABLED(0),
+    CLIENT_ONLY(1),
+    SERVER_ONLY(2),
+    BOTH(3),
+    ;
+
+    public final int value;
+
+    TCPFastOpenMode(int value) {
+        this.value = value;
+    }
+
+    public static TCPFastOpenMode fromValue(int value) {
+        for(TCPFastOpenMode enumValue : TCPFastOpenMode.values()) {
+            if (enumValue.value == value)
+                return enumValue;
+        }
+
+        return DISABLED;
+    }
+}
diff --git a/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java b/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java
index 051430ce..ba37e373 100644
--- a/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java
+++ b/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java
@@ -144,6 +144,11 @@ public class PipelineUtils
             ch.config().setOption( ChannelOption.TCP_NODELAY, true );
             ch.config().setAllocator( PooledByteBufAllocator.DEFAULT );
             ch.config().setWriteBufferWaterMark( MARK );
+            // MikroCord start - TCP fast open
+            if (epoll && BungeeCord.getInstance().getConfig().isTcpFastOpenEnabled()) {
+                ch.config().setOption(io.netty.channel.epoll.EpollChannelOption.TCP_FASTOPEN, BungeeCord.getInstance().getConfig().getTcpFastOpenMode());
+            }
+            // MikroCord end
 
             ch.pipeline().addLast( TIMEOUT_HANDLER, new ReadTimeoutHandler( BungeeCord.getInstance().config.getTimeout(), TimeUnit.MILLISECONDS ) );
             ch.pipeline().addLast( FRAME_DECODER, new Varint21FrameDecoder( BungeeCord.getInstance().getConfig().isAllowEmptyPackets()) ); // Waterfall
-- 
2.21.0

