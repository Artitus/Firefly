From eedc46a2acc7c5cfd880b048a882abb0e2e42ed4 Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Tue, 19 Mar 2019 23:05:17 +0200
Subject: [PATCH] Add support for MikroCord-specific configuration


diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyServer.java b/api/src/main/java/net/md_5/bungee/api/ProxyServer.java
index 812eba55c..021c5eea1 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyServer.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyServer.java
@@ -353,6 +353,11 @@ public abstract class ProxyServer
          * Waterfall-specific configuration
          */
         WATERFALL,
+
+        /**
+         * MikroCord-specific configuration
+         */
+        MIKROCORD,
         ;
     }
     // MikroCord end
diff --git a/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java b/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
new file mode 100644
index 000000000..0b613f678
--- /dev/null
+++ b/proxy/src/main/java/eu/mikroskeem/mikrocord/conf/MikroCordConfiguration.java
@@ -0,0 +1,17 @@
+package eu.mikroskeem.mikrocord.conf;
+
+import io.github.waterfallmc.waterfall.conf.WaterfallConfiguration;
+import net.md_5.bungee.api.ProxyServer;
+import net.md_5.bungee.api.config.ConfigurationAdapter;
+
+/**
+ * @author Mark Vainomaa
+ */
+public class MikroCordConfiguration extends WaterfallConfiguration {
+    @Override
+    public void load() {
+        super.load();
+        ConfigurationAdapter config = ProxyServer.getInstance().getConfigurationAdapter(ProxyServer.ConfigurationType.MIKROCORD);
+        config.load();
+    }
+}
diff --git a/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java b/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java
index f6beb1482..1e344fd7c 100644
--- a/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java
+++ b/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java
@@ -9,7 +9,7 @@ import net.md_5.bungee.protocol.ProtocolConstants;
 
 import java.io.File;
 
-public class WaterfallConfiguration extends Configuration {
+public abstract class WaterfallConfiguration extends Configuration { // MikroCord - make abstract
 
     /**
      * Whether we log InitialHandler connections
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index fdbca9913..b8e4a8274 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -105,7 +105,7 @@ public class BungeeCord extends ProxyServer
      * Configuration.
      */
     @Getter
-    public final Configuration config = new WaterfallConfiguration();
+    public final Configuration config = new eu.mikroskeem.mikrocord.conf.MikroCordConfiguration(); // MikroCord - Fork specific configuration
     /**
      * Localization bundle.
      */
@@ -173,6 +173,14 @@ public class BungeeCord extends ProxyServer
             super.load(false);
         }
     };
+    // MikroCord start - Fork specific configuration
+    private ConfigurationAdapter mikrocordConfigurationAdapter = new YamlConfig(new File("mikrocord.yml")) {
+        @Override
+        public void load() {
+            super.load(false);
+        }
+    };
+    // MikroCord end
 
     @Override
     public ConfigurationAdapter getConfigurationAdapter(ConfigurationType configurationType) {
@@ -181,6 +189,10 @@ public class BungeeCord extends ProxyServer
                 return configurationAdapter;
             case WATERFALL:
                 return waterfallConfigurationAdapter;
+            // Mikrocord start - Fork specific configuration
+            case MIKROCORD:
+                return mikrocordConfigurationAdapter;
+            // MikroCord end
         }
         return null;
     }
@@ -194,6 +206,11 @@ public class BungeeCord extends ProxyServer
             case WATERFALL:
                 waterfallConfigurationAdapter = adapter;
                 break;
+            // Mikrocord start - Fork specific configuration
+            case MIKROCORD:
+                mikrocordConfigurationAdapter = adapter;
+                break;
+            // MikroCord end
         }
     }
     // MikroCord end
-- 
2.21.0

