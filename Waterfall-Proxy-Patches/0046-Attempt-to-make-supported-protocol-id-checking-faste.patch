From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Tue, 26 Nov 2019 19:51:00 +0200
Subject: [PATCH] Attempt to make supported protocol id checking faster


diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/ProtocolConstants.java b/protocol/src/main/java/net/md_5/bungee/protocol/ProtocolConstants.java
index cd987c8a8c1b9892efe6033958ec624e246808b3..7da9c2c49ad343d6b6e8e4e6f058ae53de02787f 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/ProtocolConstants.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/ProtocolConstants.java
@@ -62,6 +62,28 @@ public class ProtocolConstants
             ProtocolConstants.MINECRAFT_1_15_1,
             ProtocolConstants.MINECRAFT_1_15_2
     );
+    // MikroCord start
+    public static final int LOWEST_SUPPORTED_VERSION_ID;
+    public static final int HIGHEST_SUPPORTED_VERSION_ID;
+    private static final boolean[] SUPPORTED_VERSION_IDS_FAST;
+    static {
+        LOWEST_SUPPORTED_VERSION_ID = SUPPORTED_VERSION_IDS.get(0);
+        HIGHEST_SUPPORTED_VERSION_ID = SUPPORTED_VERSION_IDS.get(SUPPORTED_VERSION_IDS.size() - 1);
+        var arraySize = HIGHEST_SUPPORTED_VERSION_ID - LOWEST_SUPPORTED_VERSION_ID + 1;
+        SUPPORTED_VERSION_IDS_FAST = new boolean[arraySize];
+        for (var supportedVersionId : SUPPORTED_VERSION_IDS) {
+            var index = supportedVersionId - LOWEST_SUPPORTED_VERSION_ID;
+            SUPPORTED_VERSION_IDS_FAST[index] = true;
+        }
+    }
+
+    public static boolean isSupportedProtocol(int protocolId) {
+        var protocolIndex = protocolId - LOWEST_SUPPORTED_VERSION_ID;
+        return protocolIndex >= 0 &&
+                protocolIndex < ProtocolConstants.SUPPORTED_VERSION_IDS_FAST.length &&
+                ProtocolConstants.SUPPORTED_VERSION_IDS_FAST[protocolIndex];
+    }
+    // MikroCord end
 
     public static final boolean isBeforeOrEq(int before, int other)
     {
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index ece535c4de44406116c3df4c02c7f78141b61d27..2a1a0d0ea6d9ba3e5c3cb702fc416a07394dccce 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -773,7 +773,7 @@ public class BungeeCord extends ProxyServer
     @Override
     public int getProtocolVersion()
     {
-        return ProtocolConstants.SUPPORTED_VERSION_IDS.get( ProtocolConstants.SUPPORTED_VERSION_IDS.size() - 1 );
+        return ProtocolConstants.HIGHEST_SUPPORTED_VERSION_ID; //SUPPORTED_VERSION_IDS.get( ProtocolConstants.SUPPORTED_VERSION_IDS.size() - 1 ); // MikroCord
     }
 
     @Override
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
index 4580752b37565e557e04ec1d1157acad68dc36ff..d93a73a5e4b15f8e3171cef9b696bcc1a3dfa453 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
@@ -251,7 +251,7 @@ public class InitialHandler extends PacketHandler implements PendingConnection
             ( (BungeeServerInfo) forced ).ping( pingBack, handshake.getProtocolVersion() );
         } else
         {
-            int protocol = ( ProtocolConstants.SUPPORTED_VERSION_IDS.contains( handshake.getProtocolVersion() ) ) ? handshake.getProtocolVersion() : bungee.getProtocolVersion();
+            int protocol = ( ProtocolConstants.isSupportedProtocol(/*SUPPORTED_VERSION_IDS.contains(*/ handshake.getProtocolVersion() ) ) ? handshake.getProtocolVersion() : bungee.getProtocolVersion(); // MikroCord
             pingBack.done( new ServerPing(
                     new ServerPing.Protocol( bungee.getName() + " " + bungee.getGameVersion(), protocol ),
                     new ServerPing.Players( listener.getMaxPlayers(), bungee.getOnlineCount(), null ),
@@ -323,7 +323,7 @@ public class InitialHandler extends PacketHandler implements PendingConnection
                 thisState = State.USERNAME;
                 ch.setProtocol( Protocol.LOGIN );
 
-                if ( !ProtocolConstants.SUPPORTED_VERSION_IDS.contains( handshake.getProtocolVersion() ) )
+                if ( !ProtocolConstants.isSupportedProtocol(handshake.getProtocolVersion())) //.SUPPORTED_VERSION_IDS.contains( handshake.getProtocolVersion() ) ) // MikroCord
                 {
                     if ( handshake.getProtocolVersion() > bungee.getProtocolVersion() )
                     {
