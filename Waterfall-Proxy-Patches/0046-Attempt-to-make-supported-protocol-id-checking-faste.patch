From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Tue, 26 Nov 2019 19:51:00 +0200
Subject: [PATCH] Attempt to make supported protocol id checking faster


diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/ProtocolConstants.java b/protocol/src/main/java/net/md_5/bungee/protocol/ProtocolConstants.java
index 20bbd5dbc87ec068db7bb6a6c24355946461bc3e..7ddcda03f9d50a04feec28cd8ebe4c18d2dcc1ca 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/ProtocolConstants.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/ProtocolConstants.java
@@ -60,6 +60,28 @@ public class ProtocolConstants
             ProtocolConstants.MINECRAFT_1_15,
             ProtocolConstants.MINECRAFT_1_15_1
     );
+    // MikroCord start
+    public static final int LOWEST_SUPPORTED_VERSION_ID;
+    public static final int HIGHEST_SUPPORTED_VERSION_ID;
+    private static final boolean[] SUPPORTED_VERSION_IDS_FAST;
+    static {
+        LOWEST_SUPPORTED_VERSION_ID = SUPPORTED_VERSION_IDS.get(0);
+        HIGHEST_SUPPORTED_VERSION_ID = SUPPORTED_VERSION_IDS.get(SUPPORTED_VERSION_IDS.size() - 1);
+        var arraySize = HIGHEST_SUPPORTED_VERSION_ID - LOWEST_SUPPORTED_VERSION_ID + 1;
+        SUPPORTED_VERSION_IDS_FAST = new boolean[arraySize];
+        for (var supportedVersionId : SUPPORTED_VERSION_IDS) {
+            var index = supportedVersionId - LOWEST_SUPPORTED_VERSION_ID;
+            SUPPORTED_VERSION_IDS_FAST[index] = true;
+        }
+    }
+
+    public static boolean isSupportedProtocol(int protocolId) {
+        var protocolIndex = protocolId - LOWEST_SUPPORTED_VERSION_ID;
+        return protocolIndex >= 0 &&
+                protocolIndex < ProtocolConstants.SUPPORTED_VERSION_IDS_FAST.length &&
+                ProtocolConstants.SUPPORTED_VERSION_IDS_FAST[protocolIndex];
+    }
+    // MikroCord end
 
     public static final boolean isBeforeOrEq(int before, int other)
     {
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index 9faf6173c5cef7a1ef00b597f8a0e3c2106632ef..1e771507851761c5acb0ce165637b5efd485b6c2 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -770,7 +770,7 @@ public class BungeeCord extends ProxyServer
     @Override
     public int getProtocolVersion()
     {
-        return ProtocolConstants.SUPPORTED_VERSION_IDS.get( ProtocolConstants.SUPPORTED_VERSION_IDS.size() - 1 );
+        return ProtocolConstants.HIGHEST_SUPPORTED_VERSION_ID; //SUPPORTED_VERSION_IDS.get( ProtocolConstants.SUPPORTED_VERSION_IDS.size() - 1 ); // MikroCord
     }
 
     @Override
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
index b1fdaf9b76a26a4356c61eb2975e28fd4eabef05..712a2fe6e92506234758bd3d427df0349f955130 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
@@ -250,7 +250,7 @@ public class InitialHandler extends PacketHandler implements PendingConnection
             ( (BungeeServerInfo) forced ).ping( pingBack, handshake.getProtocolVersion() );
         } else
         {
-            int protocol = ( ProtocolConstants.SUPPORTED_VERSION_IDS.contains( handshake.getProtocolVersion() ) ) ? handshake.getProtocolVersion() : bungee.getProtocolVersion();
+            int protocol = ( ProtocolConstants.isSupportedProtocol(/*SUPPORTED_VERSION_IDS.contains(*/ handshake.getProtocolVersion() ) ) ? handshake.getProtocolVersion() : bungee.getProtocolVersion(); // MikroCord
             pingBack.done( new ServerPing(
                     new ServerPing.Protocol( bungee.getName() + " " + bungee.getGameVersion(), protocol ),
                     new ServerPing.Players( listener.getMaxPlayers(), bungee.getOnlineCount(), null ),
@@ -322,7 +322,7 @@ public class InitialHandler extends PacketHandler implements PendingConnection
                 thisState = State.USERNAME;
                 ch.setProtocol( Protocol.LOGIN );
 
-                if ( !ProtocolConstants.SUPPORTED_VERSION_IDS.contains( handshake.getProtocolVersion() ) )
+                if ( !ProtocolConstants.isSupportedProtocol(handshake.getProtocolVersion())) //.SUPPORTED_VERSION_IDS.contains( handshake.getProtocolVersion() ) ) // MikroCord
                 {
                     if ( handshake.getProtocolVersion() > bungee.getProtocolVersion() )
                     {
